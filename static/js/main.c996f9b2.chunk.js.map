{"version":3,"sources":["utils/extendedEuclid.ts","rsa/RSA.tsx","elgamal/Elgamal.tsx","rsa/Modulo.tsx","rsa/SignRSA.tsx","rsa/SignRSACheck.tsx","elgamal/EncryptElgamal.tsx","elgamal/SignElgamal.tsx","elgamal/SignElgamalCheck.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["mod","x","y","Math","floor","RSA","useState","p","setP","q","setQ","m","setM","g","setG","d","setD","de","setDe","setX","setY","n","setN","e","setE","useEffect","BigNumber","multipliedBy","toFixed","minus","a","b","tmp","r","gcd","bigInt","modInv","toString","modPow","className","onClick","window","open","direction","size","value","onChange","target","addonBefore","placeholder","type","BigInt","Elgamal","setA","k","setK","alpha","setAlpha","beta","setBeta","gamma","setGamma","delta","setDelta","gamma2","setGamma2","x2","setX2","multiply","ModuloCaculate","SignRSA","s","setS","SignCheckRSA","result","setResult","check","setCheck","_result","EncryptElgamal","SignElgama","ed","setED","ed2","setED2","s1","setS1","s2","setS2","console","log","SignCheckElgamal","VT","setVT","VP","setVP","SubMenu","Menu","Header","Layout","Content","Sider","App","location","useLocation","span","style","padding","margin","Item","width","mode","defaultSelectedKeys","pathname","split","defaultOpenKeys","height","onSelect","key","href","icon","UserOutlined","title","LaptopOutlined","NotificationOutlined","marginBottom","path","component","DefaultRedirect","textAlign","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c996f9b2.chunk.js","sourcesContent":["// euclid algorithm\r\nexport function gcd(a: number, b: number) {\r\n  a = a || 0;\r\n  b = b || 0;\r\n  if (a < b) {\r\n    var tmp = a;\r\n    a = b;\r\n    b = tmp;\r\n  }\r\n\r\n  while (b !== 0) {\r\n    var r = a % b;\r\n    a = b;\r\n    b = r;\r\n  }\r\n  return a;\r\n}\r\n\r\n// extended euclid algorithm\r\nexport function egcd(a: number, b: number) {\r\n  // b ^ -1 mod a\r\n  a = a || 0;\r\n  b = b || 0;\r\n  if (a < b) {\r\n    var tmp = a;\r\n    a = b;\r\n    b = tmp;\r\n  }\r\n\r\n  var _a = a,\r\n    _s = [],\r\n    _q = [],\r\n    _r = [],\r\n    n = 0;\r\n\r\n  while (b > 0) {\r\n    var q = Math.floor(a / b);\r\n    var r = a % b;\r\n    a = b;\r\n    b = r;\r\n\r\n    _q.push(q);\r\n    _r.push(r);\r\n    n++;\r\n  }\r\n\r\n  // init s\r\n  _s[0] = 1;\r\n  _s[1] = 0;\r\n\r\n  for (var i = 2; i <= n + 1; i++) {\r\n    _s[i] = _s[i - 2] - _q[n - i + 1] * _s[i - 1];\r\n  }\r\n\r\n  var result = _s[n + 1];\r\n  return mod(result, _a);\r\n}\r\n\r\nexport function mod(x: number, y: number) {\r\n  // x % y = x - y * floor(x / y)\r\n  return x - y * Math.floor(x / y);\r\n}\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { gcd } from '../utils/extendedEuclid';\r\nimport { BigNumber } from 'bignumber.js';\r\n// import * as bigintCryptoUtils from 'bigint-crypto-utils';\r\n// import * as bigintModArith from 'bigint-mod-arith';\r\nimport bigInt from 'big-integer';\r\n\r\nconst RSA = () => {\r\n  const [p, setP] = useState<any>();\r\n  const [q, setQ] = useState<any>();\r\n  const [m, setM] = useState<any>();\r\n  const [g, setG] = useState<any>();\r\n  const [d, setD] = useState<any>();\r\n  const [de, setDe] = useState<any>();\r\n  const [x, setX] = useState<any>();\r\n  const [y, setY] = useState<any>();\r\n  const [n, setN] = useState<any>();\r\n  const [e, setE] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    if (!(p && q)) {\r\n      return;\r\n    }\r\n    setN(new BigNumber(p).multipliedBy(q).toFixed());\r\n    setM(\r\n      new BigNumber(new BigNumber(p).minus(1))\r\n        .multipliedBy(new BigNumber(q).minus(1))\r\n        .toFixed()\r\n    );\r\n  }, [p, q]);\r\n\r\n  useEffect(() => {\r\n    if (!(e && m)) {\r\n      return;\r\n    }\r\n    setG(gcd(e, m));\r\n    setD(bigInt(e).modInv(m).toString());\r\n  }, [e, m]);\r\n\r\n  useEffect(() => {\r\n    if (!(x && e && n)) {\r\n      return;\r\n    }\r\n    setY(bigInt(x).modPow(e, n).toString());\r\n  }, [x, e, n]);\r\n\r\n  useEffect(() => {\r\n    if (!(y && d && n)) {\r\n      return;\r\n    }\r\n    setDe(bigInt(y).modPow(d, n).toString());\r\n  }, [y, d, n]);\r\n\r\n  const reset = () => {\r\n    setP('');\r\n    setQ('');\r\n    setE('');\r\n    setX('');\r\n    setM('');\r\n    setG('');\r\n    setD('');\r\n    setDe('');\r\n    setY('');\r\n    setN('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('123456789');\r\n    setP(\r\n      '60189309855228152582080418108842142489913101192853892029893420328887351871793'\r\n    );\r\n    setQ(\r\n      '74714197566136059701452833471216875182865235128709397697022189913844351225357'\r\n    );\r\n    setE(65537);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Xây dựng hệ mật RSA</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n        <Button\r\n          onClick={() => {\r\n            window.open(\r\n              'https://asecuritysite.com/encryption/nprimes?y=256',\r\n              '_blank'\r\n            );\r\n          }}\r\n        >\r\n          Generate P,Q\r\n        </Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={p}\r\n          onChange={(e) => setP(e.target.value)}\r\n          addonBefore='p'\r\n          placeholder='Nhập p'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={q}\r\n          onChange={(e) => setQ(e.target.value)}\r\n          addonBefore='q'\r\n          placeholder='Nhập q'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={e}\r\n          onChange={(e) => setE(e.target.value)}\r\n          addonBefore='e'\r\n          placeholder='Nhập e'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n\r\n      <Space direction='vertical'>\r\n        <div>\r\n          <b>Bản rõ x = </b>\r\n          {x || 'undefined'}\r\n        </div>\r\n        <div>\r\n          <b>Bản mã y = </b>\r\n          {y || 'undefined'}\r\n        </div>\r\n        <div>\r\n          <b>p = </b>\r\n          {p || 'undefined'}\r\n        </div>\r\n        <div>\r\n          <b>q = </b>\r\n          {q || 'undefined'}\r\n        </div>\r\n        <div>\r\n          <b>Khóa công khai (e,n) = </b>({e || 'undefined'} , {n || 'undefined'}\r\n          )\r\n        </div>\r\n        <div>\r\n          <b>Khóa bí mật (d,n) = </b>({d || 'undefined'} , {n || 'undefined'})\r\n        </div>\r\n      </Space>\r\n      <hr />\r\n      <Space>\r\n        {p * q > 0 && (\r\n          <div>\r\n            <p>\r\n              <b>n = p * q = </b> {p} * {q} = {n}\r\n            </p>\r\n            <p>\r\n              <b>m = phi(n) = (p - 1)(q - 1) = </b>\r\n              {p - 1} * {q - 1} ={BigInt(m || 0).toString()}\r\n            </p>\r\n            <p>\r\n              <b>gcd(e, m)</b> = <code>{g}</code>\r\n            </p>\r\n            {g !== 1 && (\r\n              <b className='text-danger'>\r\n                <b> gcd(e, m) =</b> <code>{g} != 1</code> ==&gt; e được chọn\r\n                không thỏa mãn !\r\n              </b>\r\n            )}\r\n            {g === 1 && (\r\n              <div>\r\n                <p>\r\n                  Ta nhân thấy e được chọn thỏa mãn{' '}\r\n                  <b>\r\n                    <code>gcd(e, m) = 1</code>\r\n                  </b>\r\n                  .\r\n                </p>\r\n                <hr />\r\n                <h4>Bước 1: Thực hiện tính khóa bí mật d</h4>\r\n                <p>Áp dụng thuật toán Euclid mở rộng, ta có:</p>\r\n                <b>d = e ^ -1 mod m</b>= {e} ^ -1 mod {m} = {d}\r\n                {!x || x <= 0 ? (\r\n                  <div>\r\n                    <hr />\r\n                    <h4 className='text-danger'>Hãy nhập x &gt; 0 !!!</h4>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <hr />\r\n                    <h4>Bước 2: Mã hóa bản rõ x = {x}</h4>\r\n                    <p>\r\n                      <b>y = x ^ e mod n = </b>\r\n                      {x} ^ {e} mod {n} = {y}\r\n                    </p>\r\n                    <hr />\r\n                    <h4>Bước 3: Giải mã y khi biết d, n</h4>\r\n                    <p>\r\n                      <b>x = y ^ d mod n = </b>\r\n                      {y} ^{d} mod {n}\r\n                      <hr />\r\n                      <h4 className='text-danger'>\r\n                        <b>x = {de}</b>\r\n                      </h4>\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Space>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RSA;\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\n// import * as bigintCryptoUtils from 'bigint-crypto-utils';\r\n// import { mod } from '../utils/extendedEuclid';\r\nimport bigInt from 'big-integer';\r\n\r\nconst Elgamal = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [p, setP] = useState<any>();\r\n  const [a, setA] = useState<any>();\r\n  const [k, setK] = useState<any>();\r\n  const [alpha, setAlpha] = useState<any>();\r\n  const [beta, setBeta] = useState<any>();\r\n  const [gamma, setGamma] = useState<any>();\r\n  const [delta, setDelta] = useState<any>();\r\n  const [gamma2, setGamma2] = useState<any>();\r\n  const [x2, setX2] = useState<any>();\r\n\r\n  const reset = () => {\r\n    setP('');\r\n    setA('');\r\n    setK('');\r\n    setX('');\r\n    setAlpha('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('2035');\r\n    setP('2357');\r\n    setA('1751');\r\n    setK('1523');\r\n    setAlpha('2');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!(alpha && a && p)) {\r\n      return;\r\n    }\r\n    setBeta(bigInt(alpha).modPow(a, p).toString());\r\n    \r\n  }, [alpha, a, p]);\r\n\r\n  useEffect(() => {\r\n    if (!(alpha && k && p)) {\r\n      return;\r\n    }\r\n    setGamma(bigInt(alpha).modPow(k, p).toString());\r\n   \r\n  }, [alpha, k, p]);\r\n\r\n  useEffect(() => {\r\n    if (!(beta && k && x && p)) {\r\n      return;\r\n    }\r\n    setDelta(bigInt(beta).modPow(k, p).multiply(x).mod(p).toString());\r\n    \r\n  }, [beta, k, p, x]);\r\n\r\n  useEffect(() => {\r\n    if (!(gamma & p & a)) {\r\n      return;\r\n    }\r\n    setGamma2(\r\n      bigInt(gamma)\r\n        .modPow(p - a - 1, p)\r\n        .toString()\r\n    );\r\n    \r\n  }, [gamma, p, a]);\r\n\r\n  useEffect(() => {\r\n    if (!(gamma2 && delta && p)) {\r\n      return;\r\n    }\r\n    setX2(\r\n      bigInt(gamma2 * delta)\r\n        .mod(p)\r\n        .toString()\r\n    );\r\n    \r\n  }, [gamma2, delta, p]);\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Xây dựng hệ mật Elgamal</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={p}\r\n          onChange={(e) => setP(e.target.value)}\r\n          addonBefore='p'\r\n          placeholder='Nhập p'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={a}\r\n          onChange={(e) => setA(e.target.value)}\r\n          addonBefore='a'\r\n          placeholder={`Nhập a < p ${p ? `= ${p}` : ``}`}\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={k}\r\n          onChange={(e) => setK(e.target.value)}\r\n          addonBefore='k'\r\n          placeholder={`Nhập k < p ${p ? `= ${p}` : ``}`}\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={alpha}\r\n          onChange={(e) => setAlpha(e.target.value)}\r\n          addonBefore='α'\r\n          placeholder='Nhập alpha (α)'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n\r\n      <Space direction='vertical'>\r\n        <div>\r\n          <b>Bản rõ x = {x || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>p = {p || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>a = {a || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>k = {k || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>alpha = {alpha || 'undefined'}</b>\r\n        </div>\r\n      </Space>\r\n      <hr />\r\n      <div>\r\n        <p>\r\n          Khóa công khai β = α ^ a mod p = {alpha} ^ {a} mod {p} = {beta}\r\n        </p>\r\n        <p>\r\n          Mã khóa công khai = (p,α,β) = ({p},{alpha},{beta})\r\n        </p>\r\n        <p>Mã khóa bí mật = (a) = ({a})</p>\r\n      </div>\r\n      <hr />\r\n      <div>\r\n        <h4>\r\n          <b>Lập mã</b>\r\n        </h4>\r\n        <p>\r\n          γ = a^k mod p = {a} ^ {k} mod {p} = {gamma}\r\n        </p>\r\n        <p>\r\n          δ = x * β ^ K mod p = {x} * {beta} ^ {k} mod {p} = {delta}\r\n        </p>\r\n        <p>\r\n          Nhận được bản mã (γ,δ) = ({gamma} , {delta})\r\n        </p>\r\n      </div>\r\n      <hr />\r\n      <div>\r\n        <h4>\r\n          <b>Giải mã</b>\r\n        </h4>\r\n        <p>\r\n          y ^ -a mod p = γ^(p-1-a) mod p = γ ^ (p-a-1) mod p = {gamma} ^ ({p}-\r\n          {a}-1) mod {p} = {gamma2}\r\n        </p>\r\n        <b>\r\n          <p>x = γ ^ (-a) * δ = {x2}</p>\r\n        </b>\r\n        <h4 className='text-danger'>\r\n          <b>x = {x2}</b>\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Elgamal;\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport bigInt from 'big-integer';\r\n\r\nconst ModuloCaculate = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [y, setY] = useState<any>();\r\n  const [n, setN] = useState<any>();\r\n  const [e, setE] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    if (!(x && e && n)) {\r\n      return;\r\n    }\r\n    setY(bigInt(x).modPow(e, n).toString());\r\n  }, [x, e, n]);\r\n\r\n  const reset = () => {\r\n    setE('');\r\n    setX('');\r\n    setY('');\r\n    setN('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('123');\r\n    setE('2753');\r\n    setN('3233');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Tính mũ theo Modulo y = x ^ e mod n</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={e}\r\n          onChange={(e) => setE(e.target.value)}\r\n          addonBefore='e'\r\n          placeholder='Nhập e'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={n}\r\n          onChange={(e) => setN(e.target.value)}\r\n          addonBefore='n'\r\n          placeholder='Nhập n'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n      <h3>\r\n        <b>y = {y || 'undefined'}</b>\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModuloCaculate;\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport bigInt from 'big-integer';\r\n\r\nconst SignRSA = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [n, setN] = useState<any>();\r\n  const [d, setD] = useState<any>();\r\n  const [s, setS] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    if (!(x && d && n)) {\r\n      return;\r\n    }\r\n    setS(bigInt(x).modPow(d, n).toString());\r\n  }, [x, d, n]);\r\n\r\n  const reset = () => {\r\n    setD('');\r\n    setX('');\r\n    setN('');\r\n    setS('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('123');\r\n    setD('2753');\r\n    setN('3233');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Ký văn bản X bằng cặp khóa bí mật (d, n)</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={d}\r\n          onChange={(e) => setD(e.target.value)}\r\n          addonBefore='d'\r\n          placeholder='Nhập khóa ký d'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={n}\r\n          onChange={(e) => setN(e.target.value)}\r\n          addonBefore='n'\r\n          placeholder='Nhập n'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n      <p>\r\n        <b>Bản rõ x = {x || 'undefined'}</b>\r\n      </p>\r\n      <p>\r\n        <b>\r\n          Khóa bí mật (d,n) = ({d || 'undefined'},{n || 'undefined'})\r\n        </b>\r\n      </p>\r\n      <hr />\r\n      <div>\r\n        <p>\r\n          <b>Chữ ký s = x ^ d mod n = </b>\r\n          {x || 'undefined'} ^{d || 'undefined'} mod {n || 'undefined'} =\r\n          {x || 'undefined'} ^{d || 'undefined'} mod {n || 'undefined'} =\r\n          <b> {s || 'undefined'}</b>\r\n        </p>\r\n      </div>\r\n      {s && s !== '0' && (\r\n        <>\r\n          <hr />\r\n          <h4 className='text-danger'> =&gt; Chữ ký số: {s}</h4>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignRSA;\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\n// import * as bigintCryptoUtils from 'bigint-crypto-utils';\r\nimport bigInt from 'big-integer';\r\n\r\nconst SignCheckRSA = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [n, setN] = useState<any>();\r\n  const [e, setE] = useState<any>();\r\n  const [s, setS] = useState<any>();\r\n  const [result, setResult] = useState<any>();\r\n  const [check, setCheck] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (!(s && e && n)) {\r\n      return;\r\n    }\r\n    let _result = bigInt(s).modPow(e, n).toString();\r\n    setResult(_result);\r\n    setCheck(_result === x.toString());\r\n  }, [x, e, n, s]);\r\n\r\n  const reset = () => {\r\n    setE('');\r\n    setX('');\r\n    setS('');\r\n    setN('');\r\n    setCheck(false);\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('123');\r\n    setS('2746');\r\n    setE('17');\r\n    setN('3233');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Kiểm tra chữ ký</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={s}\r\n          onChange={(e) => setS(e.target.value)}\r\n          addonBefore='s'\r\n          placeholder='Nhập chữ ký s'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={e}\r\n          onChange={(e) => setE(e.target.value)}\r\n          addonBefore='d'\r\n          placeholder='Nhập khóa công khai e'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={n}\r\n          onChange={(e) => setN(e.target.value)}\r\n          addonBefore='n'\r\n          placeholder='Nhập n công khai'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n      <p>\r\n        <b>Bản rõ x = {x || 'undefined'}</b>\r\n      </p>\r\n      <p>\r\n        <b>Chữ ký số = {s || 'undefined'}</b>\r\n      </p>\r\n      <p>\r\n        <b>Khóa công khai e = {e || 'undefined'}</b>\r\n      </p>\r\n      <p>\r\n        <b>Modulo khóa công khai n = {n || 'undefined'}</b>\r\n      </p>\r\n      <hr />\r\n      <div>\r\n        <p>\r\n          <b>\r\n            Verify (x, s) = (x === s ^ e mod n) ?{' '}\r\n            <code>{check.toString()}</code>{' '}\r\n          </b>\r\n        </p>\r\n      </div>\r\n      {s && e && n && (\r\n        <>\r\n          <hr />\r\n          <p>\r\n            <b>s ^ e mod n = </b>\r\n            {s} ^ {e} mod {n} = {result}\r\n          </p>\r\n          {check ? (\r\n            <p>\r\n              <b className='text-danger'>\r\n                x = {x} === {result}\r\n              </b>\r\n            </p>\r\n          ) : (\r\n            <p>\r\n              <b className='text-danger'>\r\n                x == {x} !== {result}\r\n              </b>\r\n              <hr />\r\n            </p>\r\n          )}\r\n          {check ? (\r\n            <h4 className='text-danger'>\r\n              <b>Đây là chữ ký hợp lệ</b>\r\n            </h4>\r\n          ) : (\r\n            <h4 className='text-danger'>\r\n              <b>Chữ ký không hợp lệ</b>\r\n            </h4>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignCheckRSA;\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport bigInt from 'big-integer';\r\n\r\nconst EncryptElgamal = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [p, setP] = useState<any>();\r\n  const [k, setK] = useState<any>();\r\n  const [alpha, setAlpha] = useState<any>();\r\n  const [beta, setBeta] = useState<any>();\r\n  const [gamma, setGamma] = useState<any>();\r\n  const [delta, setDelta] = useState<any>();\r\n\r\n  const reset = () => {\r\n    setP('');\r\n    setK('');\r\n    setX('');\r\n    setAlpha('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('2035');\r\n    setP('2357');\r\n    setK('1523');\r\n    setAlpha('2');\r\n    setBeta('1185');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!(alpha && k && p)) {\r\n      return;\r\n    }\r\n    setGamma(bigInt(alpha).modPow(k, p).toString());\r\n  }, [alpha, k, p]);\r\n\r\n  useEffect(() => {\r\n    if (!(beta && k && p && x)) {\r\n      return;\r\n    }\r\n    setDelta(bigInt(beta).modPow(k, p).multiply(x).toString());\r\n  }, [beta, k, p, x]);\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Mã hóa Elgamal</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={alpha}\r\n          onChange={(e) => setAlpha(e.target.value)}\r\n          addonBefore='α'\r\n          placeholder='Nhập alpha (α)'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={beta}\r\n          onChange={(e) => setBeta(e.target.value)}\r\n          addonBefore='β'\r\n          placeholder='Nhập beta (β)'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={p}\r\n          onChange={(e) => setP(e.target.value)}\r\n          addonBefore='p'\r\n          placeholder='Nhập p'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={k}\r\n          onChange={(e) => setK(e.target.value)}\r\n          addonBefore='k'\r\n          placeholder='Nhập k'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n\r\n      <Space direction='vertical'>\r\n        <div>\r\n          <b>Bản rõ x = {x || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>p = {p || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>β = {beta || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>k = {k || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>alpha = {alpha || 'undefined'}</b>\r\n        </div>\r\n      </Space>\r\n      <hr />\r\n\r\n      <div>\r\n        <p>\r\n          γ = α^k mod p = {alpha} ^ {k} mod {p} = {gamma}\r\n        </p>\r\n        <p>\r\n          δ = x * β ^ K mod p = {x} * {beta} ^ {k} mod {p} = {delta}\r\n        </p>\r\n        <h4 className='text-danger'>\r\n          <b>\r\n            Nhận được bản mã (γ,δ) = ({gamma} , {delta})\r\n          </b>\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EncryptElgamal;\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { mod } from '../utils/extendedEuclid';\r\nimport bigInt from 'big-integer';\r\n\r\nconst SignElgama = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [p, setP] = useState<any>();\r\n  const [a, setA] = useState<any>();\r\n  const [k, setK] = useState<any>();\r\n  const [alpha, setAlpha] = useState<any>();\r\n  const [beta, setBeta] = useState<any>();\r\n  const [ed, setED] = useState<any>();\r\n  const [ed2, setED2] = useState<any>();\r\n  const [s1, setS1] = useState<any>();\r\n  const [s2, setS2] = useState<any>();\r\n\r\n  const reset = () => {\r\n    setA('');\r\n    setX('');\r\n    setP('');\r\n    setK('');\r\n    setAlpha('');\r\n    setBeta('');\r\n    setED('');\r\n    setS1('');\r\n    setS2('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('2035');\r\n    setP('2357');\r\n    setA('1751');\r\n    setK('1523');\r\n    setAlpha('2');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!(alpha && a && p)) {\r\n      return;\r\n    }\r\n    setBeta(bigInt(alpha).modPow(a, p).toString());\r\n  }, [alpha, a, p]);\r\n\r\n  useEffect(() => {\r\n    if (!(k && p)) {\r\n      return;\r\n    }\r\n    setED(\r\n      bigInt(k)\r\n        .modInv(p - 1)\r\n        .toString()\r\n    );\r\n  }, [k, p]);\r\n\r\n  useEffect(() => {\r\n    if (!(alpha && k && p)) {\r\n      return;\r\n    }\r\n    setS1(bigInt(alpha).modPow(k, p).toString());\r\n  }, [alpha, k, p]);\r\n\r\n  useEffect(() => {\r\n    if (!(x && a && s1 && p)) {\r\n      return;\r\n    }\r\n\r\n    console.log(x - a * s1);\r\n    console.log(p - 1);\r\n    console.log(mod(x - a * s1, p - 1).toString());\r\n\r\n    console.log(\r\n      bigInt(x - a * s1)\r\n        .mod(p - 1)\r\n        .toString()\r\n    );\r\n\r\n    setED2(mod(x - a * s1, p - 1).toString());\r\n  }, [a, p, s1, x]);\r\n\r\n  useEffect(() => {\r\n    if (!(ed2 && k && p)) {\r\n      return;\r\n    }\r\n    setS2(\r\n      bigInt(k)\r\n        .modInv(p - 1)\r\n        .multiply(ed2)\r\n        .mod(p - 1)\r\n        .toString()\r\n    );\r\n  }, [ed2, k, p]);\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Ký văn bản X bằng hệ mật Elgamal</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={p}\r\n          onChange={(e) => setP(e.target.value)}\r\n          addonBefore='p'\r\n          placeholder='Nhập p'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={a}\r\n          onChange={(e) => setA(e.target.value)}\r\n          addonBefore='a'\r\n          placeholder='Nhập a'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={k}\r\n          onChange={(e) => setK(e.target.value)}\r\n          addonBefore='k'\r\n          placeholder='Nhập k'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={alpha}\r\n          onChange={(e) => setAlpha(e.target.value)}\r\n          addonBefore='alpha'\r\n          placeholder='Nhập alpha'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n      <p>\r\n        <b>Bản rõ x = {x || 'undefined'}</b>\r\n      </p>\r\n      <p>\r\n        <b>Phần tử nguyên thủy: alpha = </b>\r\n        {alpha}\r\n      </p>\r\n      <p>\r\n        <b>Cặp khóa công khai để kiểm tra chữ ký: (alpha, beta, p) = </b> (\r\n        {alpha} , {beta} , {p})\r\n      </p>\r\n      <p>\r\n        <b>Cặp khóa bí mật để ký: (a, k) = </b> ({a} , {k})\r\n      </p>\r\n      <p>\r\n        <b>s1= </b> {s1}\r\n      </p>\r\n      <p>\r\n        <b>egcd(k, p - 1) mod p - 1 = </b> {ed}\r\n      </p>\r\n      <p>\r\n        <b>(x - a * s) mod p - 1 = </b> {ed2}\r\n      </p>\r\n      <p>\r\n        <b>(s1,s2) =(alpha ^ k mod p, (x - a * s1) * (k ^ -1) = </b> ({s1} ,{' '}\r\n        {s2})\r\n      </p>\r\n\r\n      <hr />\r\n      {s1 && s2 && (\r\n        <h4 className='text-danger'>\r\n          =&gt; Chữ ký trên x: (s1,s2) = ({s1} , {s2})\r\n        </h4>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignElgama;\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport bigInt from 'big-integer';\r\n\r\nconst SignCheckElgamal = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [p, setP] = useState<any>();\r\n  const [alpha, setAlpha] = useState<any>();\r\n  const [beta, setBeta] = useState<any>();\r\n  const [s1, setS1] = useState<any>();\r\n  const [s2, setS2] = useState<any>();\r\n  const [VT, setVT] = useState<any>();\r\n  const [VP, setVP] = useState<any>();\r\n  const [check, setCheck] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (!(beta && p && s1 && s2)) {\r\n      return;\r\n    }\r\n    setVT(\r\n      bigInt(beta)\r\n        .modPow(s1, p)\r\n        .multiply(bigInt(s1).modPow(s2, p))\r\n        .mod(p)\r\n        .toString()\r\n    );\r\n  }, [beta, p, s1, s2]);\r\n\r\n  useEffect(() => {\r\n    if (!(alpha && p && x)) {\r\n      return;\r\n    }\r\n    setVP(bigInt(alpha).modPow(x, p).toString());\r\n  }, [alpha, p, x]);\r\n\r\n  useEffect(() => {\r\n    if (!(VP && VT)) {\r\n      return;\r\n    }\r\n    setCheck(VT === VP);\r\n  }, [VP, VT]);\r\n\r\n  const reset = () => {\r\n    setX('');\r\n    setP('');\r\n    setAlpha('');\r\n    setBeta('');\r\n    setS1('');\r\n    setS2('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('2035');\r\n    setP('2357');\r\n    setAlpha('2');\r\n    setBeta('1185');\r\n    setS1('2012');\r\n    setS2('1605');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Kiểm tra chữ ký</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={p}\r\n          onChange={(e) => setP(e.target.value)}\r\n          addonBefore='p'\r\n          placeholder='Nhập p'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={alpha}\r\n          onChange={(e) => setAlpha(e.target.value)}\r\n          addonBefore='alpha'\r\n          placeholder='Nhập alpha'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={beta}\r\n          onChange={(e) => setBeta(e.target.value)}\r\n          addonBefore='beta'\r\n          placeholder='Nhập beta'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={s1}\r\n          onChange={(e) => setS1(e.target.value)}\r\n          addonBefore='s1'\r\n          placeholder='Nhập s1'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={s2}\r\n          onChange={(e) => setS2(e.target.value)}\r\n          addonBefore='s2'\r\n          placeholder='Nhập s2'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n      <div>\r\n        <p>\r\n          <b>\r\n            Verify (x, s2, s2) = đúng &lt;=&gt;{' '}\r\n            <code>(beta ^ s1) * (s1 ^ s2) mod p = alpha ^ x mod p</code>\r\n          </b>\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <p>\r\n          <b>(beta ^ s1) * (s1 ^ s2) mod p = </b>({beta} ^ {s1}) * ({s1} ^ {s2})\r\n          mod {p} = {VT}\r\n        </p>\r\n        <p>\r\n          <b>alpha ^ x mod p = </b> {alpha} ^ {x} mod {p} = {VP}\r\n        </p>\r\n      </div>\r\n\r\n      {check ? (\r\n        <h4 className='text-danger'>\r\n          <b>Chữ ký hợp lệ</b>\r\n        </h4>\r\n      ) : (\r\n        <h4 className='text-danger'>\r\n          <b>Chữ ký không hợp lệ</b>\r\n        </h4>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignCheckElgamal;\r\n","import React, { useEffect } from 'react';\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport { Layout, Menu, Breadcrumb, Row, Col } from 'antd';\nimport {\n  UserOutlined,\n  LaptopOutlined,\n  NotificationOutlined,\n} from '@ant-design/icons';\nimport './App.css';\nimport { Footer } from 'antd/lib/layout/layout';\nimport RSA from './rsa/RSA';\nimport Elgamal from './elgamal/Elgamal';\nimport ModuloCaculate from './rsa/Modulo';\nimport SignRSA from './rsa/SignRSA';\nimport SignCheckRSA from './rsa/SignRSACheck';\nimport EncryptElgamal from './elgamal/EncryptElgamal';\nimport SignElgama from './elgamal/SignElgamal';\nimport SignCheckElgamal from './elgamal/SignElgamalCheck';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\nconst App = () => {\n  const location = useLocation();\n  return (\n    <>\n      <Header className='header text-white justify-content-between'>\n        <Row>\n          <Col span={16}>\n            <>NHẬP MÔN AN TOÀN THÔNG TIN</>\n          </Col>\n          <Col span={8} className='text-center'></Col>\n        </Row>\n      </Header>\n      <Content style={{ padding: '0 50px' }}>\n        <Breadcrumb style={{ margin: '16px 0' }}>\n          <Breadcrumb.Item>UET</Breadcrumb.Item>\n          <Breadcrumb.Item>VNU</Breadcrumb.Item>\n          <Breadcrumb.Item>Nguyễn Văn Huy - 18020651</Breadcrumb.Item>\n        </Breadcrumb>\n        <Layout className='site-layout-background'>\n          <Sider className='site-layout-background' width={200}>\n            <Menu\n              mode='inline'\n              defaultSelectedKeys={[location.pathname.split('/')[1] || 'rsa-1']}\n              defaultOpenKeys={[\n                // location.pathname.split('/')[1]?.slice(0, -2) || 'rsa',\n                'rsa',\n                'elgamal',\n                'elliptic',\n              ]}\n              style={{ height: '100%' }}\n              onSelect={({ key }) => {\n                window.location.href = '/#/' + key;\n              }}\n            >\n              <SubMenu key='rsa' icon={<UserOutlined />} title='Hệ mật RSA'>\n                <Menu.Item key='rsa-1'>Xây dựng hệ mật RSA</Menu.Item>\n                <Menu.Item key='rsa-2'>Tính mũ theo modulo</Menu.Item>\n                <Menu.Item key='rsa-3'>Ký văn bản</Menu.Item>\n                <Menu.Item key='rsa-4'>Kiểm tra chữ ký</Menu.Item>\n              </SubMenu>\n              <SubMenu\n                key='elgamal'\n                icon={<LaptopOutlined />}\n                title='Hệ mật ElGamal'\n              >\n                <Menu.Item key='elgamal-1'>Xây dựng hệ mật Elgamal</Menu.Item>\n                <Menu.Item key='elgamal-2'>Mã hóa Elgamal</Menu.Item>\n                <Menu.Item key='elgamal-3'>Ký văn bản</Menu.Item>\n                <Menu.Item key='elgamal-4'>Kiểm tra chữ ký</Menu.Item>\n              </SubMenu>\n              <SubMenu\n                key='elliptic'\n                icon={<NotificationOutlined />}\n                title='Hệ mật trên đường cong Elliptic'\n              >\n                <Menu.Item key='elliptic-1'>Elliptic</Menu.Item>\n              </SubMenu>\n            </Menu>\n          </Sider>\n          <Content style={{ padding: '30px', marginBottom: 30 }}>\n            <Switch>\n              <Route path='/rsa-1' component={RSA} />\n              <Route path='/rsa-2' component={ModuloCaculate} />\n              <Route path='/rsa-3' component={SignRSA} />\n              <Route path='/rsa-4' component={SignCheckRSA} />\n              <Route path='/elgamal-1' component={Elgamal} />\n              <Route path='/elgamal-2' component={EncryptElgamal} />\n              <Route path='/elgamal-3' component={SignElgama} />\n              <Route path='/elgamal-4' component={SignCheckElgamal} />\n              <Route path='/elliptic-1' component={Elgamal} />\n              <Route path='*' component={DefaultRedirect} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Content>\n      <Footer style={{ textAlign: 'center', marginTop: 50 }}>\n        [18020651] - Nguyễn Văn Huy\n      </Footer>\n    </>\n  );\n};\n\nexport default App;\n\nconst DefaultRedirect: React.FC = () => {\n  useEffect(() => {\n    window.location.href = '/#/rsa-1';\n  }, []);\n  return <></>;\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n// import { history } from './history';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}