{"version":3,"sources":["utils/extendedEuclid.ts","rsa/RSA.tsx","elgamal/Elgamal.tsx","rsa/Modulo.tsx","rsa/SignRSA.tsx","rsa/SignRSACheck.tsx","elgamal/EncryptElgamal.tsx","elgamal/SignElgamal.tsx","elgamal/SignElgamalCheck.tsx","utils/elliptic.js","elliptic/Elliptic.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["mod","x","y","Math","floor","RSA","useState","p","setP","q","setQ","m","setM","g","setG","d","setD","de","setDe","setX","setY","n","setN","e","setE","useEffect","BigNumber","multipliedBy","toFixed","minus","error","console","log","a","b","tmp","r","gcd","bigInt","modInv","toString","modPow","className","onClick","window","open","direction","size","value","onChange","target","addonBefore","placeholder","type","BigInt","Elgamal","setA","k","setK","alpha","setAlpha","beta","setBeta","gamma","setGamma","delta","setDelta","gamma2","setGamma2","x2","setX2","multiply","ModuloCaculate","SignRSA","s","setS","SignCheckRSA","result","setResult","check","setCheck","_result","EncryptElgamal","SignElgama","ed","setED","ed2","setED2","s1","setS1","s2","setS2","SignCheckElgamal","VT","setVT","VP","setVP","curve","parseInt","i","j","addTable","_a","_b","_r","sqrt","inv","points","Point","stringRegExp","this","test","_sres","exec","prototype","isInfty","isNaN","_stringRep","eq","plus","rx","ry","times","t","generate","next","res","push","undefined","getA","getB","getR","getPoints","slice","getPoint","arg1","arg2","search","length","getAdditionTable","rIsPrime","isPrime","isNonSingular","Elliptic","setB","setR","c","setC","Px","setPx","Py","setPy","Qx","setQx","Qy","setQy","plotPoints","setPlotPoints","series","options","chartParams","setChartParams","name","data","map","chart","zoom","enabled","height","width","point","P","Q","SubMenu","Menu","Header","Layout","Content","Sider","App","location","useLocation","href","style","padding","margin","Item","mode","defaultSelectedKeys","pathname","split","defaultOpenKeys","onSelect","key","icon","UserOutlined","title","LaptopOutlined","NotificationOutlined","marginBottom","path","component","DefaultRedirect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e73e68af.chunk.js","sourcesContent":["// euclid algorithm\r\nexport function gcd(a: any, b: any) {\r\n  a = a || 0;\r\n  b = b || 0;\r\n  if (a < b) {\r\n    var tmp = a;\r\n    a = b;\r\n    b = tmp;\r\n  }\r\n\r\n  while (b !== 0) {\r\n    var r = a % b;\r\n    a = b;\r\n    b = r;\r\n  }\r\n  return a;\r\n}\r\n\r\n// extended euclid algorithm\r\nexport function egcd(a: number, b: number) {\r\n  // b ^ -1 mod a\r\n  a = a || 0;\r\n  b = b || 0;\r\n  if (a < b) {\r\n    var tmp = a;\r\n    a = b;\r\n    b = tmp;\r\n  }\r\n\r\n  var _a = a,\r\n    _s = [],\r\n    _q = [],\r\n    _r = [],\r\n    n = 0;\r\n\r\n  while (b > 0) {\r\n    var q = Math.floor(a / b);\r\n    var r = a % b;\r\n    a = b;\r\n    b = r;\r\n\r\n    _q.push(q);\r\n    _r.push(r);\r\n    n++;\r\n  }\r\n\r\n  // init s\r\n  _s[0] = 1;\r\n  _s[1] = 0;\r\n\r\n  for (var i = 2; i <= n + 1; i++) {\r\n    _s[i] = _s[i - 2] - _q[n - i + 1] * _s[i - 1];\r\n  }\r\n\r\n  var result = _s[n + 1];\r\n  return mod(result, _a);\r\n}\r\n\r\nexport function mod(x: number, y: number) {\r\n  // x % y = x - y * floor(x / y)\r\n  return x - y * Math.floor(x / y);\r\n}\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { gcd } from '../utils/extendedEuclid';\r\nimport { BigNumber } from 'bignumber.js';\r\n// import * as bigintCryptoUtils from 'bigint-crypto-utils';\r\n// import * as bigintModArith from 'bigint-mod-arith';\r\nimport bigInt from 'big-integer';\r\n\r\nconst RSA = () => {\r\n  const [p, setP] = useState<any>();\r\n  const [q, setQ] = useState<any>();\r\n  const [m, setM] = useState<any>();\r\n  const [g, setG] = useState<any>();\r\n  const [d, setD] = useState<any>();\r\n  const [de, setDe] = useState<any>();\r\n  const [x, setX] = useState<any>();\r\n  const [y, setY] = useState<any>();\r\n  const [n, setN] = useState<any>();\r\n  const [e, setE] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    if (!(p && q)) {\r\n      return;\r\n    }\r\n    try {\r\n      setN(new BigNumber(p).multipliedBy(q).toFixed());\r\n      setM(\r\n        new BigNumber(new BigNumber(p).minus(1))\r\n          .multipliedBy(new BigNumber(q).minus(1))\r\n          .toFixed()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [p, q]);\r\n\r\n  useEffect(() => {\r\n    if (!(e && m)) {\r\n      return;\r\n    }\r\n    try {\r\n      setG(gcd(e, m));\r\n      setD(bigInt(e).modInv(m).toString());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [e, m]);\r\n\r\n  useEffect(() => {\r\n    if (!(x && e && n)) {\r\n      return;\r\n    }\r\n    try {\r\n      setY(bigInt(x).modPow(e, n).toString());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [x, e, n]);\r\n\r\n  useEffect(() => {\r\n    if (!(y && d && n)) {\r\n      return;\r\n    }\r\n    try {\r\n      setDe(bigInt(y).modPow(d, n).toString());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [y, d, n]);\r\n\r\n  const reset = () => {\r\n    setP('');\r\n    setQ('');\r\n    setE('');\r\n    setX('');\r\n    setM('');\r\n    setG('');\r\n    setD('');\r\n    setDe('');\r\n    setY('');\r\n    setN('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('123456789');\r\n    setP(\r\n      '60189309855228152582080418108842142489913101192853892029893420328887351871793'\r\n    );\r\n    setQ(\r\n      '74714197566136059701452833471216875182865235128709397697022189913844351225357'\r\n    );\r\n    setE(65537);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Xây dựng hệ mật RSA</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n        <Button\r\n          onClick={() => {\r\n            window.open(\r\n              'https://asecuritysite.com/encryption/nprimes?y=256',\r\n              '_blank'\r\n            );\r\n          }}\r\n        >\r\n          Generate P,Q\r\n        </Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={p}\r\n          onChange={(e) => setP(e.target.value)}\r\n          addonBefore='p'\r\n          placeholder='Nhập p'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={q}\r\n          onChange={(e) => setQ(e.target.value)}\r\n          addonBefore='q'\r\n          placeholder='Nhập q'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={e}\r\n          onChange={(e) => setE(e.target.value)}\r\n          addonBefore='e'\r\n          placeholder='Nhập e'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n\r\n      <Space direction='vertical'>\r\n        <div>\r\n          <b>Bản rõ x = </b>\r\n          {x || 'undefined'}\r\n        </div>\r\n        <div>\r\n          <b>Bản mã y = </b>\r\n          {y || 'undefined'}\r\n        </div>\r\n        <div>\r\n          <b>p = </b>\r\n          {p || 'undefined'}\r\n        </div>\r\n        <div>\r\n          <b>q = </b>\r\n          {q || 'undefined'}\r\n        </div>\r\n        <div>\r\n          <b>Khóa công khai (e,n) = </b>({e || 'undefined'} , {n || 'undefined'}\r\n          )\r\n        </div>\r\n        <div>\r\n          <b>Khóa bí mật (d,n) = </b>({d || 'undefined'} , {n || 'undefined'})\r\n        </div>\r\n      </Space>\r\n      <hr />\r\n      <Space>\r\n        {p * q > 0 && (\r\n          <div>\r\n            <p>\r\n              <b>n = p * q = </b> {p} * {q} = {n}\r\n            </p>\r\n            <p>\r\n              <b>m = phi(n) = (p - 1)(q - 1) = </b>\r\n              {p - 1} * {q - 1} ={BigInt(m || 0).toString()}\r\n            </p>\r\n            <p>\r\n              <b>gcd(e, m)</b> = <code>{g}</code>\r\n            </p>\r\n            {g !== 1 && (\r\n              <b className='text-danger'>\r\n                <b> gcd(e, m) =</b> <code>{g} != 1</code> ==&gt; e được chọn\r\n                không thỏa mãn !\r\n              </b>\r\n            )}\r\n            {g === 1 && (\r\n              <div>\r\n                <p>\r\n                  Ta nhân thấy e được chọn thỏa mãn{' '}\r\n                  <b>\r\n                    <code>gcd(e, m) = 1</code>\r\n                  </b>\r\n                  .\r\n                </p>\r\n                <hr />\r\n                <h4>Bước 1: Thực hiện tính khóa bí mật d</h4>\r\n                <p>Áp dụng thuật toán Euclid mở rộng, ta có:</p>\r\n                <b>d = e ^ -1 mod m</b>= {e} ^ -1 mod {m} = {d}\r\n                {!x || x <= 0 ? (\r\n                  <div>\r\n                    <hr />\r\n                    <h4 className='text-danger'>Hãy nhập x &gt; 0 !!!</h4>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <hr />\r\n                    <h4>Bước 2: Mã hóa bản rõ x = {x}</h4>\r\n                    <p>\r\n                      <b>y = x ^ e mod n = </b>\r\n                      {x} ^ {e} mod {n} = {y}\r\n                    </p>\r\n                    <hr />\r\n                    <h4>Bước 3: Giải mã y khi biết d, n</h4>\r\n                    <p>\r\n                      <b>x = y ^ d mod n = </b>\r\n                      {y} ^{d} mod {n}\r\n                      <hr />\r\n                      <h4 className='text-danger'>\r\n                        <b>x = {de}</b>\r\n                      </h4>\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Space>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RSA;\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\n// import * as bigintCryptoUtils from 'bigint-crypto-utils';\r\n// import { mod } from '../utils/extendedEuclid';\r\nimport bigInt from 'big-integer';\r\n\r\nconst Elgamal = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [p, setP] = useState<any>();\r\n  const [a, setA] = useState<any>();\r\n  const [k, setK] = useState<any>();\r\n  const [alpha, setAlpha] = useState<any>();\r\n  const [beta, setBeta] = useState<any>();\r\n  const [gamma, setGamma] = useState<any>();\r\n  const [delta, setDelta] = useState<any>();\r\n  const [gamma2, setGamma2] = useState<any>();\r\n  const [x2, setX2] = useState<any>();\r\n\r\n  const reset = () => {\r\n    setP('');\r\n    setA('');\r\n    setK('');\r\n    setX('');\r\n    setAlpha('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('2035');\r\n    setP('2357');\r\n    setA('1751');\r\n    setK('1523');\r\n    setAlpha('2');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!(alpha && a && p)) {\r\n      return;\r\n    }\r\n    try {\r\n      setBeta(bigInt(alpha).modPow(a, p).toString());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [alpha, a, p]);\r\n\r\n  useEffect(() => {\r\n    if (!(alpha && k && p)) {\r\n      return;\r\n    }\r\n    try {\r\n      setGamma(bigInt(alpha).modPow(k, p).toString());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [alpha, k, p]);\r\n\r\n  useEffect(() => {\r\n    if (!(beta && k && x && p)) {\r\n      return;\r\n    }\r\n    try {\r\n      setDelta(bigInt(beta).modPow(k, p).multiply(x).mod(p).toString());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [beta, k, p, x]);\r\n\r\n  useEffect(() => {\r\n    if (!(gamma & p & a)) {\r\n      return;\r\n    }\r\n    try {\r\n      setGamma2(\r\n        bigInt(gamma)\r\n          .modPow(p - a - 1, p)\r\n          .toString()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [gamma, p, a]);\r\n\r\n  useEffect(() => {\r\n    if (!(gamma2 && delta && p)) {\r\n      return;\r\n    }\r\n    try {\r\n      setX2(\r\n        bigInt(gamma2 * delta)\r\n          .mod(p)\r\n          .toString()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [gamma2, delta, p]);\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Xây dựng hệ mật Elgamal</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={p}\r\n          onChange={(e) => setP(e.target.value)}\r\n          addonBefore='p'\r\n          placeholder='Nhập p'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={a}\r\n          onChange={(e) => setA(e.target.value)}\r\n          addonBefore='a'\r\n          placeholder={`Nhập a < p ${p ? `= ${p}` : ``}`}\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={k}\r\n          onChange={(e) => setK(e.target.value)}\r\n          addonBefore='k'\r\n          placeholder={`Nhập k < p ${p ? `= ${p}` : ``}`}\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={alpha}\r\n          onChange={(e) => setAlpha(e.target.value)}\r\n          addonBefore='α'\r\n          placeholder='Nhập alpha (α)'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n\r\n      <Space direction='vertical'>\r\n        <div>\r\n          <b>Bản rõ x = {x || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>p = {p || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>a = {a || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>k = {k || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>alpha = {alpha || 'undefined'}</b>\r\n        </div>\r\n      </Space>\r\n      <hr />\r\n      <div>\r\n        <p>\r\n          Khóa công khai β = α ^ a mod p = {alpha} ^ {a} mod {p} = {beta}\r\n        </p>\r\n        <p>\r\n          Mã khóa công khai = (p,α,β) = ({p},{alpha},{beta})\r\n        </p>\r\n        <p>Mã khóa bí mật = (a) = ({a})</p>\r\n      </div>\r\n      <hr />\r\n      <div>\r\n        <h4>\r\n          <b>Lập mã</b>\r\n        </h4>\r\n        <p>\r\n          γ = a^k mod p = {a} ^ {k} mod {p} = {gamma}\r\n        </p>\r\n        <p>\r\n          δ = x * β ^ K mod p = {x} * {beta} ^ {k} mod {p} = {delta}\r\n        </p>\r\n        <p>\r\n          Nhận được bản mã (γ,δ) = ({gamma} , {delta})\r\n        </p>\r\n      </div>\r\n      <hr />\r\n      <div>\r\n        <h4>\r\n          <b>Giải mã</b>\r\n        </h4>\r\n        <p>\r\n          y ^ -a mod p = γ^(p-1-a) mod p = γ ^ (p-a-1) mod p = {gamma} ^ ({p}-\r\n          {a}-1) mod {p} = {gamma2}\r\n        </p>\r\n        <b>\r\n          <p>x = γ ^ (-a) * δ = {x2}</p>\r\n        </b>\r\n        <h4 className='text-danger'>\r\n          <b>x = {x2}</b>\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Elgamal;\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport bigInt from 'big-integer';\r\n\r\nconst ModuloCaculate = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [y, setY] = useState<any>();\r\n  const [n, setN] = useState<any>();\r\n  const [e, setE] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    if (!(x && e && n)) {\r\n      return;\r\n    }\r\n    try {\r\n      setY(bigInt(x).modPow(e, n).toString());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [x, e, n]);\r\n\r\n  const reset = () => {\r\n    setE('');\r\n    setX('');\r\n    setY('');\r\n    setN('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('123');\r\n    setE('2753');\r\n    setN('3233');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Tính mũ theo Modulo y = x ^ e mod n</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={e}\r\n          onChange={(e) => setE(e.target.value)}\r\n          addonBefore='e'\r\n          placeholder='Nhập e'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={n}\r\n          onChange={(e) => setN(e.target.value)}\r\n          addonBefore='n'\r\n          placeholder='Nhập n'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n      <h3>\r\n        <b>y = {y || 'undefined'}</b>\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModuloCaculate;\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport bigInt from 'big-integer';\r\n\r\nconst SignRSA = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [n, setN] = useState<any>();\r\n  const [d, setD] = useState<any>();\r\n  const [s, setS] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    if (!(x && d && n)) {\r\n      return;\r\n    }\r\n    try {\r\n      setS(bigInt(x).modPow(d, n).toString());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [x, d, n]);\r\n\r\n  const reset = () => {\r\n    setD('');\r\n    setX('');\r\n    setN('');\r\n    setS('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('123');\r\n    setD('2753');\r\n    setN('3233');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Ký văn bản X bằng cặp khóa bí mật (d, n)</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={d}\r\n          onChange={(e) => setD(e.target.value)}\r\n          addonBefore='d'\r\n          placeholder='Nhập khóa ký d'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={n}\r\n          onChange={(e) => setN(e.target.value)}\r\n          addonBefore='n'\r\n          placeholder='Nhập n'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n      <p>\r\n        <b>Bản rõ x = {x || 'undefined'}</b>\r\n      </p>\r\n      <p>\r\n        <b>\r\n          Khóa bí mật (d,n) = ({d || 'undefined'},{n || 'undefined'})\r\n        </b>\r\n      </p>\r\n      <hr />\r\n      <div>\r\n        <p>\r\n          <b>Chữ ký s = x ^ d mod n = </b>\r\n          {x || 'undefined'} ^{d || 'undefined'} mod {n || 'undefined'} =\r\n          {x || 'undefined'} ^{d || 'undefined'} mod {n || 'undefined'} =\r\n          <b> {s || 'undefined'}</b>\r\n        </p>\r\n      </div>\r\n      {s && s !== '0' && (\r\n        <>\r\n          <hr />\r\n          <h4 className='text-danger'> =&gt; Chữ ký số: {s}</h4>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignRSA;\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\n// import * as bigintCryptoUtils from 'bigint-crypto-utils';\r\nimport bigInt from 'big-integer';\r\n\r\nconst SignCheckRSA = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [n, setN] = useState<any>();\r\n  const [e, setE] = useState<any>();\r\n  const [s, setS] = useState<any>();\r\n  const [result, setResult] = useState<any>();\r\n  const [check, setCheck] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (!(s && e && n)) {\r\n      return;\r\n    }\r\n    try {\r\n      let _result = bigInt(s).modPow(e, n).toString();\r\n      setResult(_result);\r\n      setCheck(_result === x.toString());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [x, e, n, s]);\r\n\r\n  const reset = () => {\r\n    setE('');\r\n    setX('');\r\n    setS('');\r\n    setN('');\r\n    setCheck(false);\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('123');\r\n    setS('2746');\r\n    setE('17');\r\n    setN('3233');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Kiểm tra chữ ký</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={s}\r\n          onChange={(e) => setS(e.target.value)}\r\n          addonBefore='s'\r\n          placeholder='Nhập chữ ký s'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={e}\r\n          onChange={(e) => setE(e.target.value)}\r\n          addonBefore='d'\r\n          placeholder='Nhập khóa công khai e'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={n}\r\n          onChange={(e) => setN(e.target.value)}\r\n          addonBefore='n'\r\n          placeholder='Nhập n công khai'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n      <p>\r\n        <b>Bản rõ x = {x || 'undefined'}</b>\r\n      </p>\r\n      <p>\r\n        <b>Chữ ký số = {s || 'undefined'}</b>\r\n      </p>\r\n      <p>\r\n        <b>Khóa công khai e = {e || 'undefined'}</b>\r\n      </p>\r\n      <p>\r\n        <b>Modulo khóa công khai n = {n || 'undefined'}</b>\r\n      </p>\r\n      <hr />\r\n      <div>\r\n        <p>\r\n          <b>\r\n            Verify (x, s) = (x === s ^ e mod n) ?{' '}\r\n            <code>{check.toString()}</code>{' '}\r\n          </b>\r\n        </p>\r\n      </div>\r\n      {s && e && n && (\r\n        <>\r\n          <hr />\r\n          <p>\r\n            <b>s ^ e mod n = </b>\r\n            {s} ^ {e} mod {n} = {result}\r\n          </p>\r\n          {check ? (\r\n            <p>\r\n              <b className='text-danger'>\r\n                x = {x} === {result}\r\n              </b>\r\n            </p>\r\n          ) : (\r\n            <p>\r\n              <b className='text-danger'>\r\n                x == {x} !== {result}\r\n              </b>\r\n              <hr />\r\n            </p>\r\n          )}\r\n          {check ? (\r\n            <h4 className='text-danger'>\r\n              <b>Đây là chữ ký hợp lệ</b>\r\n            </h4>\r\n          ) : (\r\n            <h4 className='text-danger'>\r\n              <b>Chữ ký không hợp lệ</b>\r\n            </h4>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignCheckRSA;\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport bigInt from 'big-integer';\r\n\r\nconst EncryptElgamal = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [p, setP] = useState<any>();\r\n  const [k, setK] = useState<any>();\r\n  const [alpha, setAlpha] = useState<any>();\r\n  const [beta, setBeta] = useState<any>();\r\n  const [gamma, setGamma] = useState<any>();\r\n  const [delta, setDelta] = useState<any>();\r\n\r\n  const reset = () => {\r\n    setP('');\r\n    setK('');\r\n    setX('');\r\n    setAlpha('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('2035');\r\n    setP('2357');\r\n    setK('1523');\r\n    setAlpha('2');\r\n    setBeta('1185');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!(alpha && k && p)) {\r\n      return;\r\n    }\r\n    setGamma(bigInt(alpha).modPow(k, p).toString());\r\n  }, [alpha, k, p]);\r\n\r\n  useEffect(() => {\r\n    if (!(beta && k && p && x)) {\r\n      return;\r\n    }\r\n    setDelta(\r\n      bigInt(beta)\r\n        .modPow(k, p)\r\n        .multiply(bigInt(x).modPow(1, p))\r\n        .modPow(1, p)\r\n        .toString()\r\n    );\r\n  }, [beta, k, p, x]);\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Mã hóa Elgamal</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={alpha}\r\n          onChange={(e) => setAlpha(e.target.value)}\r\n          addonBefore='α'\r\n          placeholder='Nhập alpha (α)'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={beta}\r\n          onChange={(e) => setBeta(e.target.value)}\r\n          addonBefore='β'\r\n          placeholder='Nhập beta (β)'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={p}\r\n          onChange={(e) => setP(e.target.value)}\r\n          addonBefore='p'\r\n          placeholder='Nhập p'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={k}\r\n          onChange={(e) => setK(e.target.value)}\r\n          addonBefore='k'\r\n          placeholder='Nhập k'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n\r\n      <Space direction='vertical'>\r\n        <div>\r\n          <b>Bản rõ x = {x || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>p = {p || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>β = {beta || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>k = {k || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>alpha = {alpha || 'undefined'}</b>\r\n        </div>\r\n      </Space>\r\n      <hr />\r\n\r\n      <div>\r\n        <p>\r\n          γ = α^k mod p = {alpha} ^ {k} mod {p} = {gamma}\r\n        </p>\r\n        <p>\r\n          δ = x * β ^ K mod p = {x} * {beta} ^ {k} mod {p} = {delta}\r\n        </p>\r\n        <h4 className='text-danger'>\r\n          <b>\r\n            Nhận được bản mã (γ,δ) = ({gamma} , {delta})\r\n          </b>\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EncryptElgamal;\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { mod } from '../utils/extendedEuclid';\r\nimport bigInt from 'big-integer';\r\n\r\nconst SignElgama = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [p, setP] = useState<any>();\r\n  const [a, setA] = useState<any>();\r\n  const [k, setK] = useState<any>();\r\n  const [alpha, setAlpha] = useState<any>();\r\n  const [beta, setBeta] = useState<any>();\r\n  const [ed, setED] = useState<any>();\r\n  const [ed2, setED2] = useState<any>();\r\n  const [s1, setS1] = useState<any>();\r\n  const [s2, setS2] = useState<any>();\r\n\r\n  const reset = () => {\r\n    setA('');\r\n    setX('');\r\n    setP('');\r\n    setK('');\r\n    setAlpha('');\r\n    setBeta('');\r\n    setED('');\r\n    setS1('');\r\n    setS2('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('2035');\r\n    setP('2357');\r\n    setA('1751');\r\n    setK('1523');\r\n    setAlpha('2');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!(alpha && a && p)) {\r\n      return;\r\n    }\r\n    setBeta(bigInt(alpha).modPow(a, p).toString());\r\n  }, [alpha, a, p]);\r\n\r\n  useEffect(() => {\r\n    if (!(k && p)) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setED(\r\n        bigInt(k)\r\n          .modInv(p - 1)\r\n          .toString()\r\n      );\r\n    } catch (error) {}\r\n  }, [k, p]);\r\n\r\n  useEffect(() => {\r\n    if (!(alpha && k && p)) {\r\n      return;\r\n    }\r\n    try {\r\n      setS1(bigInt(alpha).modPow(k, p).toString());\r\n    } catch (error) {}\r\n  }, [alpha, k, p]);\r\n\r\n  useEffect(() => {\r\n    if (!(x && a && s1 && p)) {\r\n      return;\r\n    }\r\n    try {\r\n      setED2(mod(x - a * s1, p - 1).toString());\r\n    } catch (error) {}\r\n  }, [a, p, s1, x]);\r\n\r\n  useEffect(() => {\r\n    if (!(ed2 && k && p)) {\r\n      return;\r\n    }\r\n    try {\r\n      setS2(\r\n        bigInt(k)\r\n          .modInv(p - 1)\r\n          .multiply(ed2)\r\n          .mod(p - 1)\r\n          .toString()\r\n      );\r\n    } catch (error) {}\r\n  }, [ed2, k, p]);\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Ký văn bản X bằng hệ mật Elgamal</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={p}\r\n          onChange={(e) => setP(e.target.value)}\r\n          addonBefore='p'\r\n          placeholder='Nhập p'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={a}\r\n          onChange={(e) => setA(e.target.value)}\r\n          addonBefore='a'\r\n          placeholder='Nhập a'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={k}\r\n          onChange={(e) => setK(e.target.value)}\r\n          addonBefore='k'\r\n          placeholder='Nhập k'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={alpha}\r\n          onChange={(e) => setAlpha(e.target.value)}\r\n          addonBefore='alpha'\r\n          placeholder='Nhập alpha'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n      <p>\r\n        <b>Bản rõ x = {x || 'undefined'}</b>\r\n      </p>\r\n      <p>\r\n        <b>Phần tử nguyên thủy: alpha = </b>\r\n        {alpha}\r\n      </p>\r\n      <p>\r\n        <b>Cặp khóa công khai để kiểm tra chữ ký: (alpha, beta, p) = </b> (\r\n        {alpha} , {beta} , {p})\r\n      </p>\r\n      <p>\r\n        <b>Cặp khóa bí mật để ký: (a, k) = </b> ({a} , {k})\r\n      </p>\r\n      <p>\r\n        <b>s1= </b> {s1}\r\n      </p>\r\n      <p>\r\n        <b>egcd(k, p - 1) mod p - 1 = </b> {ed}\r\n      </p>\r\n      <p>\r\n        <b>(x - a * s) mod p - 1 = </b> {ed2}\r\n      </p>\r\n      <p>\r\n        <b>(s1,s2) =(alpha ^ k mod p, (x - a * s1) * (k ^ -1) = </b> ({s1} ,{' '}\r\n        {s2})\r\n      </p>\r\n\r\n      <hr />\r\n      {s1 && s2 && (\r\n        <h4 className='text-danger'>\r\n          =&gt; Chữ ký trên x: (s1,s2) = ({s1} , {s2})\r\n        </h4>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignElgama;\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport bigInt from 'big-integer';\r\n\r\nconst SignCheckElgamal = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [p, setP] = useState<any>();\r\n  const [alpha, setAlpha] = useState<any>();\r\n  const [beta, setBeta] = useState<any>();\r\n  const [s1, setS1] = useState<any>();\r\n  const [s2, setS2] = useState<any>();\r\n  const [VT, setVT] = useState<any>();\r\n  const [VP, setVP] = useState<any>();\r\n  const [check, setCheck] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (!(beta && p && s1 && s2)) {\r\n      return;\r\n    }\r\n    try {\r\n      setVT(\r\n        bigInt(beta)\r\n          .modPow(s1, p)\r\n          .multiply(bigInt(s1).modPow(s2, p))\r\n          .mod(p)\r\n          .toString()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [beta, p, s1, s2]);\r\n\r\n  useEffect(() => {\r\n    if (!(alpha && p && x)) {\r\n      return;\r\n    }\r\n    try {\r\n      setVP(bigInt(alpha).modPow(x, p).toString());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [alpha, p, x]);\r\n\r\n  useEffect(() => {\r\n    if (!(VP && VT)) {\r\n      return;\r\n    }\r\n    try {\r\n      setCheck(VT === VP);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [VP, VT]);\r\n\r\n  const reset = () => {\r\n    setX('');\r\n    setP('');\r\n    setAlpha('');\r\n    setBeta('');\r\n    setS1('');\r\n    setS2('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('2035');\r\n    setP('2357');\r\n    setAlpha('2');\r\n    setBeta('1185');\r\n    setS1('2012');\r\n    setS2('1605');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Kiểm tra chữ ký</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={p}\r\n          onChange={(e) => setP(e.target.value)}\r\n          addonBefore='p'\r\n          placeholder='Nhập p'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={alpha}\r\n          onChange={(e) => setAlpha(e.target.value)}\r\n          addonBefore='alpha'\r\n          placeholder='Nhập alpha'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={beta}\r\n          onChange={(e) => setBeta(e.target.value)}\r\n          addonBefore='beta'\r\n          placeholder='Nhập beta'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={s1}\r\n          onChange={(e) => setS1(e.target.value)}\r\n          addonBefore='s1'\r\n          placeholder='Nhập s1'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={s2}\r\n          onChange={(e) => setS2(e.target.value)}\r\n          addonBefore='s2'\r\n          placeholder='Nhập s2'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n      <div>\r\n        <p>\r\n          <b>\r\n            Verify (x, s2, s2) = đúng &lt;=&gt;{' '}\r\n            <code>(beta ^ s1) * (s1 ^ s2) mod p = alpha ^ x mod p</code>\r\n          </b>\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <p>\r\n          <b>(beta ^ s1) * (s1 ^ s2) mod p = </b>({beta} ^ {s1}) * ({s1} ^ {s2})\r\n          mod {p} = {VT}\r\n        </p>\r\n        <p>\r\n          <b>alpha ^ x mod p = </b> {alpha} ^ {x} mod {p} = {VP}\r\n        </p>\r\n      </div>\r\n\r\n      {check ? (\r\n        <h4 className='text-danger'>\r\n          <b>Chữ ký hợp lệ</b>\r\n        </h4>\r\n      ) : (\r\n        <h4 className='text-danger'>\r\n          <b>Chữ ký không hợp lệ</b>\r\n        </h4>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignCheckElgamal;\r\n","/* eslint-disable no-unused-vars */\nvar curve = function (a, b, r) {\n  a = parseInt(a, 10);\n  b = parseInt(b, 10);\n  r = parseInt(r, 10);\n\n  var _a = a,\n    _b = b,\n    _r = r;\n\n  var i, j;\n\n  var sqrt = [],\n    inv = [],\n    points = [],\n    addTable;\n\n  // helper functions\n  var mod = function (x, r) {\n    return ((x % r) + r) % r;\n  };\n  var isPrime = function (n) {\n    var d;\n    // no need to implement advanced algorithms\n    // for toy instances\n    if (mod(n, 2) === 0) {\n      return false;\n    }\n    for (d = 3; d * d < n; d = d + 2) {\n      if (mod(n, d) === 0) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // a Point class\n  var Point = function (x, y) {\n    var stringRegExp = /\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)\\s*/;\n    this.x = x;\n    this.y = y;\n    var _stringRep;\n\n    if (typeof x === 'string') {\n      if (stringRegExp.test(x)) {\n        var _sres = stringRegExp.exec(x);\n        this.x = parseInt(_sres[1], 10);\n        this.y = parseInt(_sres[2], 10);\n      }\n    }\n\n    if (typeof x === 'object' && 'x' in x && 'y' in x) {\n      this.x = x.x;\n      this.y = x.y;\n    }\n\n    if (typeof this.x !== 'number') {\n      this.x = -1;\n      this.y = -1;\n    }\n    if (typeof this.y !== 'number') {\n      this.x = -1;\n      this.y = -1;\n    }\n  };\n\n  Point.prototype.isInfty = function () {\n    return this.x === -1 && this.y === -1;\n  };\n\n  Point.prototype.isNaN = function () {\n    return isNaN(this.x) || isNaN(this.y);\n  };\n\n  Point.prototype.toString = function () {\n    if (!this._stringRep) {\n      this._stringRep =\n        this.x === -1 && this.y === -1\n          ? '&infin;'\n          : '(' + this.x + ',' + this.y + ')';\n    }\n    return this._stringRep;\n  };\n\n  Point.prototype.eq = function (p) {\n    return this.x === p.x && this.y === p.y;\n  };\n\n  Point.prototype.plus = function (p) {\n    if (this.isInfty()) return p;\n    if (p.isInfty()) return this;\n\n    var s;\n    if (this.x === p.x) {\n      if (this.y !== p.y || this.y === 0) {\n        return new Point(-1, -1);\n      }\n      // self addition\n      s = mod((3 * this.x * this.x + _a) * inv[mod(2 * this.y, _r)], _r);\n    } else {\n      s = mod((p.y - this.y) * inv[mod(p.x - this.x, _r)], _r);\n    }\n\n    var rx = mod(s * s - p.x - this.x, _r),\n      ry = mod(s * this.x - s * rx - this.y, _r);\n\n    return new Point(rx, ry);\n  };\n\n  Point.prototype.times = function (t) {\n    if (t === 1) {\n      return this;\n    } else if (t > 1) {\n      return this.plus(this.times(t - 1));\n    } else if (t === 0) {\n      return new Point();\n    }\n    // t < 0: not implemented\n  };\n\n  // what a wonderful application for ES6 generators ;-)\n  // however, let's stick with old browsers\n  Point.prototype.generate = function () {\n    var next = this,\n      res = [];\n    do {\n      res.push(next);\n      next = next.plus(this);\n    } while (!next.isNaN() && !next.eq(this));\n\n    return !next.isNaN() ? res : undefined;\n  };\n\n  // initialize helper arrays: sqrt and inv\n  for (i = 0; i < r; i++) {\n    sqrt[i] = -1;\n  }\n\n  for (i = 0; i < r; i++) {\n    if (i <= r / 2) {\n      sqrt[(i * i) % r] = i;\n    }\n    for (j = i; j < r; j++) {\n      if ((i * j) % r === 1) {\n        inv[i] = j;\n        inv[j] = i;\n        break;\n      }\n    }\n  }\n\n  // compute list of points on this curve\n  // note: r might not be prime\n  // first add infinity\n  points.push(new Point());\n  for (i = 0; i < r; i++) {\n    for (j = 0; j <= r / 2; j++) {\n      if ((j * j) % r === mod(i * i * i + a * i + b, r)) {\n        points.push(new Point(i, j));\n        if (j % r !== (r - j) % r) {\n          points.push(new Point(i, r - j));\n        }\n      }\n    }\n  }\n\n  // build interface\n  return {\n    getA: function () {\n      return _a;\n    },\n    getB: function () {\n      return _b;\n    },\n    getR: function () {\n      return _r;\n    },\n\n    getPoints: function () {\n      return points.slice();\n    },\n\n    getPoint: function (arg1, arg2) {\n      // delegate argument type checks to Point constructor\n      var search = new Point(arg1, arg2);\n      for (i = 0; i < points.length; i++) {\n        if (search.eq(points[i])) {\n          return search;\n        }\n      }\n      return undefined;\n    },\n\n    getAdditionTable: function () {\n      if (!addTable) {\n        var i, j;\n\n        addTable = [];\n        for (i = 0; i < points.length; i++) {\n          addTable[i] = [];\n        }\n\n        for (i = 0; i < points.length; i++) {\n          for (j = i; j < points.length; j++) {\n            addTable[i][j] = points[i].plus(points[j]);\n            addTable[j][i] = addTable[i][j];\n          }\n        }\n      }\n      return addTable;\n    },\n\n    rIsPrime: function () {\n      return isPrime(_r);\n    },\n\n    isNonSingular: function () {\n      if (_r > 3) {\n        return mod(4 * _a * _a * _a + 27 * _b * _b, _r) !== 0;\n      }\n    },\n  };\n};\n\nexport default curve;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button, Input, Space } from 'antd';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport curve from '../utils/elliptic';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\nexport interface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nconst Elliptic = () => {\r\n  const [a, setA] = useState<any>(4);\r\n  const [b, setB] = useState<any>(2);\r\n  const [r, setR] = useState<any>(43);\r\n  const [c, setC] = useState(curve(a, b, r));\r\n  const [Px, setPx] = useState<any>();\r\n  const [Py, setPy] = useState<any>();\r\n  const [Qx, setQx] = useState<any>();\r\n  const [Qy, setQy] = useState<any>();\r\n  const [n, setN] = useState<any>();\r\n  const [result, setResult] = useState('');\r\n  const [plotPoints, setPlotPoints] = useState<Point[]>(c.getPoints().slice(1));\r\n  const [chartParams, setChartParams] = useState<{\r\n    series: any;\r\n    options: ApexOptions;\r\n  }>({\r\n    series: [],\r\n    options: {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (r > 999) {\r\n      setR(999);\r\n      return;\r\n    }\r\n    setC(curve(a, b, r));\r\n    setPlotPoints(curve(a, b, r).getPoints().slice(1));\r\n  }, [a, b, r]);\r\n\r\n  const plus = () => {\r\n    if (!(Px && Py && Qx && Qy)) {\r\n      setResult('Hãy nhập đầy đủ tọa độ của P và Q !!!');\r\n      return;\r\n    }\r\n    let P = c.getPoint(parseInt(Px), parseInt(Py));\r\n    let Q = c.getPoint(parseInt(Qx), parseInt(Qy));\r\n    if (typeof P === 'undefined') {\r\n      setResult('P không thuộc đường cong elliptic này');\r\n      return;\r\n    }\r\n    if (typeof Q === 'undefined') {\r\n      setResult('Q không thuộc đường cong elliptic này');\r\n      return;\r\n    }\r\n    setResult(`P(${Px},${Py}) + Q(${Qx},${Qy}) = ${P.plus(Q).toString()}`);\r\n  };\r\n\r\n  const multiply = () => {\r\n    if (!(Px && Py && n)) {\r\n      setResult('Hãy nhập đầy đủ P và n!!!');\r\n      return;\r\n    }\r\n    let P = c.getPoint(parseInt(Px), parseInt(Py));\r\n\r\n    if (typeof P === 'undefined') {\r\n      setResult('P không thuộc đường cong elliptic này');\r\n      return;\r\n    }\r\n\r\n    if (n <= 0) {\r\n      setResult(`${n}P(${Px},${Py}) = (0,0)`);\r\n      return;\r\n    }\r\n\r\n    let generate = P.generate();\r\n    let _result = generate![(n % generate!.length) - 1];\r\n\r\n    setResult(`${n}P(${Px},${Py}) = ${_result?.toString()}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setChartParams({\r\n      series: [\r\n        {\r\n          name: 'Points',\r\n          data: plotPoints.map((p: any) => [p.x, p.y]),\r\n        },\r\n      ],\r\n      options: {\r\n        chart: {\r\n          type: 'scatter',\r\n          zoom: {\r\n            enabled: true,\r\n            type: 'xy',\r\n          },\r\n          height: 200,\r\n        },\r\n        // tooltip: {\r\n        //   custom: ({ series, seriesIndex, dataPointIndex, w }: any) => {\r\n        //     console.log(series);\r\n        //     console.log(seriesIndex);\r\n        //     console.log(dataPointIndex);\r\n        //     // console.log(plotPoints[props.dataPointIndex]);\r\n        //     // return '';\r\n\r\n        //     return `<div class=\"p-2\"><b>Điểm</b><div>( ${series[dataPointIndex]}, ${series[dataPointIndex]} ) </div></div>`;\r\n        //   },\r\n        // },\r\n      },\r\n    });\r\n  }, [plotPoints]);\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-3'>\r\n        <b>Xây dựng hệ mật Elliptic</b>\r\n      </h3>\r\n      <Space className='inputs'>\r\n        <Input\r\n          value={a}\r\n          onChange={(e) => setA(e.target.value)}\r\n          addonBefore='a'\r\n          placeholder='Nhập a'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={b}\r\n          onChange={(e) => setB(e.target.value)}\r\n          addonBefore='b'\r\n          placeholder='Nhập b'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={r}\r\n          onChange={(e) => setR(e.target.value)}\r\n          addonBefore='r'\r\n          placeholder='Nhập r'\r\n          type='number'\r\n        />\r\n\r\n        {!c.rIsPrime() && (\r\n          <h4 className='text-danger'>\r\n            <b>R không phải là số nguyên tố !!!</b>\r\n          </h4>\r\n        )}\r\n      </Space>\r\n\r\n      <div className='my-3'>\r\n        <ReactApexChart\r\n          options={chartParams.options}\r\n          series={chartParams.series}\r\n          type='scatter'\r\n          height={300}\r\n          width={'80%'}\r\n        />\r\n      </div>\r\n      <div>\r\n        <h4 className='my-3'>\r\n          <b>\r\n            Các điểm trên E{r}({a},{b}) là điểm vô cực O và các điểm sau\r\n          </b>\r\n        </h4>\r\n        <table className='table table-bordered'>\r\n          <tbody>\r\n            <tr>\r\n              {plotPoints.slice(0, plotPoints.length / 2).map((point, i) => (\r\n                <td key={i}>{point.toString()}</td>\r\n              ))}\r\n            </tr>\r\n            <tr>\r\n              {plotPoints.slice(plotPoints.length / 2 + 1).map((point, i) => (\r\n                <td key={i}>{point.toString()}</td>\r\n              ))}\r\n            </tr>\r\n            {c.rIsPrime()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div>\r\n        <h4 className='my-3'>\r\n          <b>Các phép tính trên đường cong elliptic</b>\r\n        </h4>\r\n        <div>\r\n          <Space>\r\n            <b>Điểm P</b>\r\n            <Input\r\n              value={Px}\r\n              onChange={(e) => setPx(e.target.value)}\r\n              addonBefore='x'\r\n              placeholder='Nhập Px'\r\n              type='number'\r\n            />\r\n            <Input\r\n              value={Py}\r\n              onChange={(e) => setPy(e.target.value)}\r\n              addonBefore='y'\r\n              placeholder='Nhập Py'\r\n              type='number'\r\n            />\r\n            <b>Điểm Q</b>\r\n            <Input\r\n              value={Qx}\r\n              onChange={(e) => setQx(e.target.value)}\r\n              addonBefore='Qx'\r\n              placeholder='Nhập Qx'\r\n              type='number'\r\n            />\r\n            <Input\r\n              value={Qy}\r\n              onChange={(e) => setQy(e.target.value)}\r\n              addonBefore='Qy'\r\n              placeholder='Nhập Qy'\r\n              type='number'\r\n            />\r\n            <Input\r\n              value={n}\r\n              onChange={(e) => setN(e.target.value)}\r\n              addonBefore='n'\r\n              placeholder='Nhập N'\r\n              type='number'\r\n            />\r\n          </Space>\r\n        </div>\r\n        <div className='mt-4'>\r\n          <Space>\r\n            <Button type='primary' onClick={plus}>\r\n              P + Q\r\n            </Button>\r\n            <Button type='primary' onClick={multiply}>\r\n              P x n\r\n            </Button>\r\n            <div className='ml-4 mt-1'>\r\n              <h4 className='text-danger'>\r\n                <b>{result}</b>\r\n              </h4>\r\n            </div>\r\n          </Space>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Elliptic;\r\n","import React, { useEffect } from 'react';\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport { Layout, Menu, Breadcrumb, Row } from 'antd';\nimport {\n  UserOutlined,\n  LaptopOutlined,\n  NotificationOutlined,\n} from '@ant-design/icons';\nimport './App.css';\nimport RSA from './rsa/RSA';\nimport Elgamal from './elgamal/Elgamal';\nimport ModuloCaculate from './rsa/Modulo';\nimport SignRSA from './rsa/SignRSA';\nimport SignCheckRSA from './rsa/SignRSACheck';\nimport EncryptElgamal from './elgamal/EncryptElgamal';\nimport SignElgama from './elgamal/SignElgamal';\nimport SignCheckElgamal from './elgamal/SignElgamalCheck';\nimport Elliptic from './elliptic/Elliptic';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\nconst App = () => {\n  const location = useLocation();\n  return (\n    <>\n      <Header className='header text-white justify-content-between'>\n        <Row>\n          <div className='mr-auto'>\n            <>NHẬP MÔN AN TOÀN THÔNG TIN</>\n          </div>\n          <a\n            className='text-white'\n            href='https://github.com/NoCtrlZ1110/nmattt/'\n          >\n            Github / Source code\n          </a>\n        </Row>\n      </Header>\n      <Content style={{ padding: '0 50px' }}>\n        <Breadcrumb style={{ margin: '16px 0' }}>\n          <Breadcrumb.Item>UET</Breadcrumb.Item>\n          <Breadcrumb.Item>VNU</Breadcrumb.Item>\n          <Breadcrumb.Item>Nguyễn Văn Huy - 18020651</Breadcrumb.Item>\n        </Breadcrumb>\n        <Layout className='site-layout-background'>\n          <Sider className='site-layout-background' width={200}>\n            <Menu\n              mode='inline'\n              defaultSelectedKeys={[location.pathname.split('/')[1] || 'rsa-1']}\n              defaultOpenKeys={[\n                // location.pathname.split('/')[1]?.slice(0, -2) || 'rsa',\n                'rsa',\n                'elgamal',\n                'elliptic',\n              ]}\n              style={{ height: '100%' }}\n              onSelect={({ key }) => {\n                window.location.href = '/#/' + key;\n              }}\n            >\n              <SubMenu key='rsa' icon={<UserOutlined />} title='Hệ mật RSA'>\n                <Menu.Item key='rsa-1'>Xây dựng hệ mật RSA</Menu.Item>\n                <Menu.Item key='rsa-2'>Tính mũ theo modulo</Menu.Item>\n                <Menu.Item key='rsa-3'>Ký văn bản</Menu.Item>\n                <Menu.Item key='rsa-4'>Kiểm tra chữ ký</Menu.Item>\n              </SubMenu>\n              <SubMenu\n                key='elgamal'\n                icon={<LaptopOutlined />}\n                title='Hệ mật ElGamal'\n              >\n                <Menu.Item key='elgamal-1'>Xây dựng hệ mật Elgamal</Menu.Item>\n                <Menu.Item key='elgamal-2'>Mã hóa Elgamal</Menu.Item>\n                <Menu.Item key='elgamal-3'>Ký văn bản</Menu.Item>\n                <Menu.Item key='elgamal-4'>Kiểm tra chữ ký</Menu.Item>\n              </SubMenu>\n              <SubMenu\n                key='elliptic'\n                icon={<NotificationOutlined />}\n                title='Hệ mật trên đường cong Elliptic'\n              >\n                <Menu.Item key='elliptic-1'>Elliptic</Menu.Item>\n              </SubMenu>\n            </Menu>\n          </Sider>\n          <Content style={{ padding: '30px', marginBottom: 30 }}>\n            <Switch>\n              <Route path='/rsa-1' component={RSA} />\n              <Route path='/rsa-2' component={ModuloCaculate} />\n              <Route path='/rsa-3' component={SignRSA} />\n              <Route path='/rsa-4' component={SignCheckRSA} />\n              <Route path='/elgamal-1' component={Elgamal} />\n              <Route path='/elgamal-2' component={EncryptElgamal} />\n              <Route path='/elgamal-3' component={SignElgama} />\n              <Route path='/elgamal-4' component={SignCheckElgamal} />\n              <Route path='/elliptic-1' component={Elliptic} />\n              <Route path='*' component={DefaultRedirect} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Content>\n      {/* <Footer style={{ textAlign: 'center', marginTop: 50 }}>\n        [18020651] - Nguyễn Văn Huy\n      </Footer> */}\n    </>\n  );\n};\n\nexport default App;\n\nconst DefaultRedirect: React.FC = () => {\n  useEffect(() => {\n    window.location.href = '/#/rsa-1';\n  }, []);\n  return <></>;\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n// import { history } from './history';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}