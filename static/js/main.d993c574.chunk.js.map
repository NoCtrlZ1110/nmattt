{"version":3,"sources":["utils/extendedEuclid.ts","rsa/RSA.tsx","elgamal/Elgamal.tsx","rsa/Modulo.tsx","history.ts","rsa/SignRSA.tsx","rsa/SignRSACheck.tsx","elgamal/EncryptElgamal.tsx","elgamal/SignElgamal.tsx","elgamal/SignElgamalCheck.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["mod","x","y","Math","floor","RSA","useState","p","setP","q","setQ","m","setM","g","setG","d","setD","de","setDe","setX","setY","n","setN","e","setE","useEffect","BigNumber","multipliedBy","toFixed","minus","a","b","tmp","r","gcd","bigintCryptoUtils","BigInt","toString","error","console","log","className","onClick","window","open","direction","size","value","onChange","target","addonBefore","placeholder","type","Elgamal","setA","k","setK","alpha","setAlpha","beta","setBeta","gamma","setGamma","delta","setDelta","gamma2","setGamma2","x2","setX2","ModuloCaculate","history","createBrowserHistory","SignRSA","s","setS","SignCheckRSA","result","setResult","check","setCheck","_result","EncryptElgamal","SignElgama","ed","setED","ed2","setED2","s1","setS1","s2","setS2","SignCheckElgamal","VT","setVT","VP","setVP","SubMenu","Menu","Header","Layout","Content","Sider","App","location","useLocation","span","style","padding","margin","Item","width","mode","defaultSelectedKeys","pathname","replaceAll","defaultOpenKeys","slice","height","onSelect","item","key","keyPath","selectedKeys","domEvent","push","icon","UserOutlined","title","LaptopOutlined","NotificationOutlined","marginBottom","exact","path","component","DefaultRedirect","textAlign","marginTop","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d993c574.chunk.js","sourcesContent":["// euclid algorithm\r\nexport function gcd(a: number, b: number) {\r\n  a = a || 0;\r\n  b = b || 0;\r\n  if (a < b) {\r\n    var tmp = a;\r\n    a = b;\r\n    b = tmp;\r\n  }\r\n\r\n  while (b !== 0) {\r\n    var r = a % b;\r\n    a = b;\r\n    b = r;\r\n  }\r\n  return a;\r\n}\r\n\r\n// extended euclid algorithm\r\nexport function egcd(a: number, b: number) {\r\n  // b ^ -1 mod a\r\n  a = a || 0;\r\n  b = b || 0;\r\n  if (a < b) {\r\n    var tmp = a;\r\n    a = b;\r\n    b = tmp;\r\n  }\r\n\r\n  var _a = a,\r\n    _s = [],\r\n    _q = [],\r\n    _r = [],\r\n    n = 0;\r\n\r\n  while (b > 0) {\r\n    var q = Math.floor(a / b);\r\n    var r = a % b;\r\n    a = b;\r\n    b = r;\r\n\r\n    _q.push(q);\r\n    _r.push(r);\r\n    n++;\r\n  }\r\n\r\n  // init s\r\n  _s[0] = 1;\r\n  _s[1] = 0;\r\n\r\n  for (var i = 2; i <= n + 1; i++) {\r\n    _s[i] = _s[i - 2] - _q[n - i + 1] * _s[i - 1];\r\n  }\r\n\r\n  var result = _s[n + 1];\r\n  return mod(result, _a);\r\n}\r\n\r\nexport function mod(x: number, y: number) {\r\n  // x % y = x - y * floor(x / y)\r\n  return x - y * Math.floor(x / y);\r\n  // console.log(x);\r\n  // console.log(y);\r\n  // console.log(Math.floor(x / y));\r\n  // console.log(Math.floor(new BigNumber(x).dividedBy(y).toNumber()));\r\n  // console.log(x - y * Math.floor(x / y));\r\n  // console.log(\r\n  //   new BigNumber(x)\r\n  //     .minus(\r\n  //       new BigNumber(y).multipliedBy(\r\n  //         Math.floor(new BigNumber(x).dividedBy(y).toNumber())\r\n  //       )\r\n  //     )\r\n  //     .toFixed()\r\n  // );\r\n\r\n  // return new BigNumber(x)\r\n  //   .minus(\r\n  //     new BigNumber(y).multipliedBy(\r\n  //       Math.floor(new BigNumber(x).dividedBy(y).toNumber())\r\n  //     )\r\n  //   )\r\n  //   .toFixed();\r\n}\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { gcd } from '../utils/extendedEuclid';\r\nimport { BigNumber } from 'bignumber.js';\r\nimport * as bigintCryptoUtils from 'bigint-crypto-utils';\r\n\r\nconst RSA = () => {\r\n  const [p, setP] = useState<any>();\r\n  const [q, setQ] = useState<any>();\r\n  const [m, setM] = useState<any>();\r\n  const [g, setG] = useState<any>();\r\n  const [d, setD] = useState<any>();\r\n  const [de, setDe] = useState<any>();\r\n  const [x, setX] = useState<any>();\r\n  const [y, setY] = useState<any>();\r\n  const [n, setN] = useState<any>();\r\n  const [e, setE] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    if (!(p && q)) {\r\n      return;\r\n    }\r\n    setN(new BigNumber(p).multipliedBy(q).toFixed());\r\n    setM(\r\n      new BigNumber(new BigNumber(p).minus(1))\r\n        .multipliedBy(new BigNumber(q).minus(1))\r\n        .toFixed()\r\n    );\r\n  }, [p, q]);\r\n\r\n  useEffect(() => {\r\n    if (!(e && m)) {\r\n      return;\r\n    }\r\n    setG(gcd(e, m));\r\n    try {\r\n      setD(\r\n        bigintCryptoUtils\r\n          .modInv(BigInt(e || 99999), BigInt(m || 99999))\r\n          .toString()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [e, m]);\r\n\r\n  useEffect(() => {\r\n    if (!(x && e && n)) {\r\n      return;\r\n    }\r\n    try {\r\n      setY(\r\n        bigintCryptoUtils\r\n          .modPow(BigInt(x || 99999), BigInt(e || 99999), BigInt(n || 99999))\r\n          .toString()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [x, e, n]);\r\n\r\n  useEffect(() => {\r\n    if (!(y && d && n)) {\r\n      return;\r\n    }\r\n    try {\r\n      setDe(\r\n        bigintCryptoUtils\r\n          .modPow(BigInt(y || 99999), BigInt(d || 99999), BigInt(n || 99999))\r\n          .toString()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [y, d, n]);\r\n\r\n  const reset = () => {\r\n    setP('');\r\n    setQ('');\r\n    setE('');\r\n    setX('');\r\n    setM('');\r\n    setG('');\r\n    setD('');\r\n    setDe('');\r\n    setY('');\r\n    setN('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('123456789');\r\n    setP(\r\n      '60189309855228152582080418108842142489913101192853892029893420328887351871793'\r\n    );\r\n    setQ(\r\n      '74714197566136059701452833471216875182865235128709397697022189913844351225357'\r\n    );\r\n    setE(65537);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Xây dựng hệ mật RSA</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n        <Button\r\n          onClick={() => {\r\n            window.open(\r\n              'https://asecuritysite.com/encryption/nprimes?y=256',\r\n              '_blank'\r\n            );\r\n          }}\r\n        >\r\n          Generate P,Q\r\n        </Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={p}\r\n          onChange={(e) => setP(e.target.value)}\r\n          addonBefore='p'\r\n          placeholder='Nhập p'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={q}\r\n          onChange={(e) => setQ(e.target.value)}\r\n          addonBefore='q'\r\n          placeholder='Nhập q'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={e}\r\n          onChange={(e) => setE(e.target.value)}\r\n          addonBefore='e'\r\n          placeholder='Nhập e'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n\r\n      <Space direction='vertical'>\r\n        <div>\r\n          <b>Bản rõ x = </b>\r\n          {x || 'undefined'}\r\n        </div>\r\n        <div>\r\n          <b>Bản mã y = </b>\r\n          {y || 'undefined'}\r\n        </div>\r\n        <div>\r\n          <b>p = </b>\r\n          {p || 'undefined'}\r\n        </div>\r\n        <div>\r\n          <b>q = </b>\r\n          {q || 'undefined'}\r\n        </div>\r\n        <div>\r\n          <b>Khóa công khai (e,n) = </b>({e || 'undefined'} , {n || 'undefined'}\r\n          )\r\n        </div>\r\n        <div>\r\n          <b>Khóa bí mật (d,n) = </b>({d || 'undefined'} , {n || 'undefined'})\r\n        </div>\r\n      </Space>\r\n      <hr />\r\n      <Space>\r\n        {p * q > 0 && (\r\n          <div>\r\n            <p>\r\n              <b>n = p * q = </b> {p} * {q} = {n}\r\n            </p>\r\n            <p>\r\n              <b>m = phi(n) = (p - 1)(q - 1) = </b>\r\n              {p - 1} * {q - 1} ={BigInt(m || 0).toString()}\r\n            </p>\r\n            <p>\r\n              <b>gcd(e, m)</b> = <code>{g}</code>\r\n            </p>\r\n            {g !== 1 && (\r\n              <b className='text-danger'>\r\n                <b> gcd(e, m) =</b> <code>{g} != 1</code> ==&gt; e được chọn\r\n                không thỏa mãn !\r\n              </b>\r\n            )}\r\n            {g === 1 && (\r\n              <div>\r\n                <p>\r\n                  Ta nhân thấy e được chọn thỏa mãn{' '}\r\n                  <b>\r\n                    <code>gcd(e, m) = 1</code>\r\n                  </b>\r\n                  .\r\n                </p>\r\n                <hr />\r\n                <h4>Bước 1: Thực hiện tính khóa bí mật d</h4>\r\n                <p>Áp dụng thuật toán Euclid mở rộng, ta có:</p>\r\n                <b>d = e ^ -1 mod m</b>= {e} ^ -1 mod {m} = {d}\r\n                {!x || x <= 0 ? (\r\n                  <div>\r\n                    <hr />\r\n                    <h4 className='text-danger'>Hãy nhập x &gt; 0 !!!</h4>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <hr />\r\n                    <h4>Bước 2: Mã hóa bản rõ x = {x}</h4>\r\n                    <p>\r\n                      <b>y = x ^ e mod n = </b>\r\n                      {x} ^ {e} mod {n} = {y}\r\n                    </p>\r\n                    <hr />\r\n                    <h4>Bước 3: Giải mã y khi biết d, n</h4>\r\n                    <p>\r\n                      <b>x = y ^ d mod n = </b>\r\n                      {y} ^{d} mod {n}\r\n                      <hr />\r\n                      <h4 className='text-danger'>\r\n                        <b>x = {de}</b>\r\n                      </h4>\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Space>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RSA;\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as bigintCryptoUtils from 'bigint-crypto-utils';\r\nimport { mod } from '../utils/extendedEuclid';\r\n\r\nconst Elgamal = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [p, setP] = useState<any>();\r\n  const [a, setA] = useState<any>();\r\n  const [k, setK] = useState<any>();\r\n  const [alpha, setAlpha] = useState<any>();\r\n  const [beta, setBeta] = useState<any>();\r\n  const [gamma, setGamma] = useState<any>();\r\n  const [delta, setDelta] = useState<any>();\r\n  const [gamma2, setGamma2] = useState<any>();\r\n  const [x2, setX2] = useState<any>();\r\n\r\n  const reset = () => {\r\n    setP('');\r\n    setA('');\r\n    setK('');\r\n    setX('');\r\n    setAlpha('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('2035');\r\n    setP('2357');\r\n    setA('1751');\r\n    setK('1523');\r\n    setAlpha('2');\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setBeta(\r\n        bigintCryptoUtils\r\n          .modPow(\r\n            BigInt(alpha || 99999),\r\n            BigInt(a || 99999),\r\n            BigInt(p || 99999)\r\n          )\r\n          .toString()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [alpha, a, p]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setGamma(\r\n        bigintCryptoUtils\r\n          .modPow(\r\n            BigInt(alpha || 99999),\r\n            BigInt(k || 99999),\r\n            BigInt(p || 99999)\r\n          )\r\n          .toString()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [alpha, k, p]);\r\n\r\n  useEffect(() => {\r\n    setDelta(\r\n      (x *\r\n        (bigintCryptoUtils\r\n          .modPow(BigInt(beta || 99999), BigInt(k || 99999), BigInt(p || 99999))\r\n          .toString() as any)) %\r\n        p\r\n    );\r\n  }, [beta, k, p, x]);\r\n\r\n  useEffect(() => {\r\n    if (!(gamma & p & a)) {\r\n      return;\r\n    }\r\n    try {\r\n      setGamma2(\r\n        bigintCryptoUtils\r\n          .modPow(\r\n            BigInt(gamma || 99999),\r\n            BigInt(p - a - 1 || 99999),\r\n            BigInt(p || 99999)\r\n          )\r\n          .toString()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [gamma, p, a]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setX2(mod(gamma2 * delta, p));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [gamma2, delta, p]);\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Xây dựng hệ mật Elgamal</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={p}\r\n          onChange={(e) => setP(e.target.value)}\r\n          addonBefore='p'\r\n          placeholder='Nhập p'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={a}\r\n          onChange={(e) => setA(e.target.value)}\r\n          addonBefore='a'\r\n          placeholder={`Nhập a < p ${p ? `= ${p}` : ``}`}\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={k}\r\n          onChange={(e) => setK(e.target.value)}\r\n          addonBefore='k'\r\n          placeholder={`Nhập k < p ${p ? `= ${p}` : ``}`}\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={alpha}\r\n          onChange={(e) => setAlpha(e.target.value)}\r\n          addonBefore='α'\r\n          placeholder='Nhập alpha (α)'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n\r\n      <Space direction='vertical'>\r\n        <div>\r\n          <b>Bản rõ x = {x || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>p = {p || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>a = {a || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>k = {k || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>alpha = {alpha || 'undefined'}</b>\r\n        </div>\r\n      </Space>\r\n      <hr />\r\n      <div>\r\n        <p>\r\n          Khóa công khai β = α ^ a mod p = {alpha} ^ {a} mod {p} = {beta}\r\n        </p>\r\n        <p>\r\n          Mã khóa công khai = (p,α,β) = ({p},{alpha},{beta})\r\n        </p>\r\n        <p>Mã khóa bí mật = (a) = ({a})</p>\r\n      </div>\r\n      <hr />\r\n      <div>\r\n        <h4>\r\n          <b>Lập mã</b>\r\n        </h4>\r\n        <p>\r\n          γ = a^k mod p = {a} ^ {k} mod {p} = {gamma}\r\n        </p>\r\n        <p>\r\n          δ = x * β ^ K mod p = {x} * {beta} ^ {k} mod {p} = {delta}\r\n        </p>\r\n        <p>\r\n          Nhận được bản mã (γ,δ) = ({gamma} , {delta})\r\n        </p>\r\n      </div>\r\n      <hr />\r\n      <div>\r\n        <h4>\r\n          <b>Giải mã</b>\r\n        </h4>\r\n        <p>\r\n          y ^ -a mod p = γ^(p-1-a) mod p = γ ^ (p-a-1) mod p = {gamma} ^ ({p}-\r\n          {a}-1) mod {p} = {gamma2}\r\n        </p>\r\n        <b>\r\n          <p>x = γ ^ (-a) * δ = {x2}</p>\r\n        </b>\r\n        <h4 className='text-danger'>\r\n          <b>x = {x2}</b>\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Elgamal;\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as bigintCryptoUtils from 'bigint-crypto-utils';\r\n\r\nconst ModuloCaculate = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [y, setY] = useState<any>();\r\n  const [n, setN] = useState<any>();\r\n  const [e, setE] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    if (!(x && e && n)) {\r\n      return;\r\n    }\r\n    setY(\r\n      bigintCryptoUtils\r\n        .modPow(BigInt(x || 99999), BigInt(e || 99999), BigInt(n || 99999))\r\n        .toString()\r\n    );\r\n  }, [x, e, n]);\r\n\r\n  const reset = () => {\r\n    setE('');\r\n    setX('');\r\n    setY('');\r\n    setN('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('123');\r\n    setE('2753');\r\n    setN('3233');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Tính mũ theo Modulo y = x ^ e mod n</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={e}\r\n          onChange={(e) => setE(e.target.value)}\r\n          addonBefore='e'\r\n          placeholder='Nhập e'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={n}\r\n          onChange={(e) => setN(e.target.value)}\r\n          addonBefore='n'\r\n          placeholder='Nhập n'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n      <h3>\r\n        <b>y = {y || 'undefined'}</b>\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModuloCaculate;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as bigintCryptoUtils from 'bigint-crypto-utils';\r\n\r\nconst SignRSA = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [n, setN] = useState<any>();\r\n  const [d, setD] = useState<any>();\r\n  const [s, setS] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    if (!(x && d && n)) {\r\n      return;\r\n    }\r\n    try {\r\n      setS(\r\n        bigintCryptoUtils\r\n          .modPow(BigInt(x || 99999), BigInt(d || 99999), BigInt(n || 99999))\r\n          .toString()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [x, d, n]);\r\n\r\n  const reset = () => {\r\n    setD('');\r\n    setX('');\r\n    setN('');\r\n    setS('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('123');\r\n    setD('2753');\r\n    setN('3233');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Ký văn bản X bằng cặp khóa bí mật (d, n)</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={d}\r\n          onChange={(e) => setD(e.target.value)}\r\n          addonBefore='d'\r\n          placeholder='Nhập khóa ký d'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={n}\r\n          onChange={(e) => setN(e.target.value)}\r\n          addonBefore='n'\r\n          placeholder='Nhập n'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n      <p>\r\n        <b>Bản rõ x = {x || 'undefined'}</b>\r\n      </p>\r\n      <p>\r\n        <b>\r\n          Khóa bí mật (d,n) = ({d || 'undefined'},{n || 'undefined'})\r\n        </b>\r\n      </p>\r\n      <hr />\r\n      <div>\r\n        <p>\r\n          <b>Chữ ký s = x ^ d mod n = </b>\r\n          {x || 'undefined'} ^{d || 'undefined'} mod {n || 'undefined'} =\r\n          {x || 'undefined'} ^{d || 'undefined'} mod {n || 'undefined'} =\r\n          <b> {s || 'undefined'}</b>\r\n        </p>\r\n      </div>\r\n      {s && s !== '0' && (\r\n        <>\r\n          <hr />\r\n          <h4 className='text-danger'> =&gt; Chữ ký số: {s}</h4>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignRSA;\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as bigintCryptoUtils from 'bigint-crypto-utils';\r\n\r\nconst SignCheckRSA = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [n, setN] = useState<any>();\r\n  const [e, setE] = useState<any>();\r\n  const [s, setS] = useState<any>();\r\n  const [result, setResult] = useState<any>();\r\n  const [check, setCheck] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (!(s && e && n)) {\r\n      return;\r\n    }\r\n    try {\r\n      let _result = bigintCryptoUtils\r\n        .modPow(BigInt(s || 99999), BigInt(e || 99999), BigInt(n || 99999))\r\n        .toString();\r\n      setResult(_result);\r\n      setCheck(_result === x.toString());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [x, e, n, s]);\r\n\r\n  const reset = () => {\r\n    setE('');\r\n    setX('');\r\n    setS('');\r\n    setN('');\r\n    setCheck(false);\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('123');\r\n    setS('2746');\r\n    setE('17');\r\n    setN('3233');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Kiểm tra chữ ký</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={s}\r\n          onChange={(e) => setS(e.target.value)}\r\n          addonBefore='s'\r\n          placeholder='Nhập chữ ký s'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={e}\r\n          onChange={(e) => setE(e.target.value)}\r\n          addonBefore='d'\r\n          placeholder='Nhập khóa công khai e'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={n}\r\n          onChange={(e) => setN(e.target.value)}\r\n          addonBefore='n'\r\n          placeholder='Nhập n công khai'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n      <p>\r\n        <b>Bản rõ x = {x || 'undefined'}</b>\r\n      </p>\r\n      <p>\r\n        <b>Chữ ký số = {s || 'undefined'}</b>\r\n      </p>\r\n      <p>\r\n        <b>Khóa công khai e = {e || 'undefined'}</b>\r\n      </p>\r\n      <p>\r\n        <b>Modulo khóa công khai n = {n || 'undefined'}</b>\r\n      </p>\r\n      <hr />\r\n      <div>\r\n        <p>\r\n          <b>\r\n            Verify (x, s) = (x === s ^ e mod n) ?{' '}\r\n            <code>{check.toString()}</code>{' '}\r\n          </b>\r\n        </p>\r\n      </div>\r\n      {s && e && n && (\r\n        <>\r\n          <hr />\r\n          <p>\r\n            <b>s ^ e mod n = </b>\r\n            {s} ^ {e} mod {n} = {result}\r\n          </p>\r\n          {check ? (\r\n            <p>\r\n              <b className='text-danger'>\r\n                x = {x} === {result}\r\n              </b>\r\n            </p>\r\n          ) : (\r\n            <p>\r\n              <b className='text-danger'>\r\n                x == {x} !== {result}\r\n              </b>\r\n              <hr />\r\n            </p>\r\n          )}\r\n          {check ? (\r\n            <h4 className='text-danger'>\r\n              <b>Đây là chữ ký hợp lệ</b>\r\n            </h4>\r\n          ) : (\r\n            <h4 className='text-danger'>\r\n              <b>Chữ ký không hợp lệ</b>\r\n            </h4>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignCheckRSA;\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as bigintCryptoUtils from 'bigint-crypto-utils';\r\n\r\nconst EncryptElgamal = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [p, setP] = useState<any>();\r\n  const [k, setK] = useState<any>();\r\n  const [alpha, setAlpha] = useState<any>();\r\n  const [beta, setBeta] = useState<any>();\r\n  const [gamma, setGamma] = useState<any>();\r\n  const [delta, setDelta] = useState<any>();\r\n\r\n  const reset = () => {\r\n    setP('');\r\n    setK('');\r\n    setX('');\r\n    setAlpha('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('2035');\r\n    setP('2357');\r\n    setK('1523');\r\n    setAlpha('2');\r\n    setBeta('1185');\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setGamma(\r\n        bigintCryptoUtils\r\n          .modPow(\r\n            BigInt(alpha || 99999),\r\n            BigInt(k || 99999),\r\n            BigInt(p || 99999)\r\n          )\r\n          .toString()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [alpha, k, p]);\r\n\r\n  useEffect(() => {\r\n    setDelta(\r\n      x *\r\n        (bigintCryptoUtils\r\n          .modPow(BigInt(beta || 99999), BigInt(k || 99999), BigInt(p || 99999))\r\n          .toString() as any)\r\n    );\r\n  }, [beta, k, p, x]);\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Mã hóa Elgamal</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={alpha}\r\n          onChange={(e) => setAlpha(e.target.value)}\r\n          addonBefore='α'\r\n          placeholder='Nhập alpha (α)'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={beta}\r\n          onChange={(e) => setBeta(e.target.value)}\r\n          addonBefore='β'\r\n          placeholder='Nhập beta (β)'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={p}\r\n          onChange={(e) => setP(e.target.value)}\r\n          addonBefore='p'\r\n          placeholder='Nhập p'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={k}\r\n          onChange={(e) => setK(e.target.value)}\r\n          addonBefore='k'\r\n          placeholder='Nhập k'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n\r\n      <Space direction='vertical'>\r\n        <div>\r\n          <b>Bản rõ x = {x || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>p = {p || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>β = {beta || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>k = {k || 'undefined'}</b>\r\n        </div>\r\n        <div>\r\n          <b>alpha = {alpha || 'undefined'}</b>\r\n        </div>\r\n      </Space>\r\n      <hr />\r\n\r\n      <div>\r\n        <p>\r\n          γ = α^k mod p = {alpha} ^ {k} mod {p} = {gamma}\r\n        </p>\r\n        <p>\r\n          δ = x * β ^ K mod p = {x} * {beta} ^ {k} mod {p} = {delta}\r\n        </p>\r\n        <h4 className='text-danger'>\r\n          <b>\r\n            Nhận được bản mã (γ,δ) = ({gamma} , {delta})\r\n          </b>\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EncryptElgamal;\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as bigintCryptoUtils from 'bigint-crypto-utils';\r\nimport { mod } from '../utils/extendedEuclid';\r\n\r\nconst SignElgama = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [p, setP] = useState<any>();\r\n  const [a, setA] = useState<any>();\r\n  const [k, setK] = useState<any>();\r\n  const [alpha, setAlpha] = useState<any>();\r\n  const [beta, setBeta] = useState<any>();\r\n  const [ed, setED] = useState<any>();\r\n  const [ed2, setED2] = useState<any>();\r\n  const [s1, setS1] = useState<any>();\r\n  const [s2, setS2] = useState<any>();\r\n\r\n  const reset = () => {\r\n    setA('');\r\n    setX('');\r\n    setP('');\r\n    setK('');\r\n    setAlpha('');\r\n    setBeta('');\r\n    setED('');\r\n    setS1('');\r\n    setS2('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('2035');\r\n    setP('2357');\r\n    setA('1751');\r\n    setK('1523');\r\n    setAlpha('2');\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setBeta(\r\n        bigintCryptoUtils\r\n          .modPow(\r\n            BigInt(alpha || 99999),\r\n            BigInt(a || 99999),\r\n            BigInt(p || 99999)\r\n          )\r\n          .toString()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [alpha, a, p]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setED(\r\n        bigintCryptoUtils\r\n          .modInv(BigInt(k || 99999), BigInt(p - 1 || 99999))\r\n          .toString()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [k, p]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setS1(\r\n        bigintCryptoUtils\r\n          .modPow(\r\n            BigInt(alpha || 99999),\r\n            BigInt(k || 99999),\r\n            BigInt(p || 99999)\r\n          )\r\n          .toString()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [alpha, k, p]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setED2(mod(x - a * s1, p - 1).toString());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [a, p, s1, x]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setS2(\r\n        ((\r\n          BigInt(ed2 || 99999) *\r\n          bigintCryptoUtils.modInv(BigInt(k || 99999), BigInt(p - 1 || 99999))\r\n        ).toString() as any) %\r\n          (p - 1)\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [ed2, k, p]);\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Ký văn bản X bằng hệ mật Elgamal</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={p}\r\n          onChange={(e) => setP(e.target.value)}\r\n          addonBefore='p'\r\n          placeholder='Nhập p'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={a}\r\n          onChange={(e) => setA(e.target.value)}\r\n          addonBefore='a'\r\n          placeholder='Nhập a'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={k}\r\n          onChange={(e) => setK(e.target.value)}\r\n          addonBefore='k'\r\n          placeholder='Nhập k'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={alpha}\r\n          onChange={(e) => setAlpha(e.target.value)}\r\n          addonBefore='alpha'\r\n          placeholder='Nhập alpha'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n      <p>\r\n        <b>Bản rõ x = {x || 'undefined'}</b>\r\n      </p>\r\n      <p>\r\n        <b>Phần tử nguyên thủy: alpha = </b>\r\n        {alpha}\r\n      </p>\r\n      <p>\r\n        <b>Cặp khóa công khai để kiểm tra chữ ký: (alpha, beta, p) = </b> (\r\n        {alpha} , {beta} , {p})\r\n      </p>\r\n      <p>\r\n        <b>Cặp khóa bí mật để ký: (a, k) = </b> ({a} , {k})\r\n      </p>\r\n      <p>\r\n        <b>s1= </b> {s1}\r\n      </p>\r\n      <p>\r\n        <b>egcd(k, p - 1) mod p - 1 = </b> {ed}\r\n      </p>\r\n      <p>\r\n        <b>(x - a * s) mod p - 1 = </b> {ed2}\r\n      </p>\r\n      <p>\r\n        <b>(s1,s2) =(alpha ^ k mod p, (x - a * s1) * (k ^ -1) = </b> ({s1} ,{' '}\r\n        {s2})\r\n      </p>\r\n\r\n      <hr />\r\n      {s1 && s2 && (\r\n        <h4 className='text-danger'>\r\n          =&gt; Chữ ký trên x: (s1,s2) = ({s1} , {s2})\r\n        </h4>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignElgama;\r\n","import { Button, Input, Space } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as bigintCryptoUtils from 'bigint-crypto-utils';\r\nimport { mod } from '../utils/extendedEuclid';\r\n\r\nconst SignCheckElgamal = () => {\r\n  const [x, setX] = useState<any>();\r\n  const [p, setP] = useState<any>();\r\n  const [alpha, setAlpha] = useState<any>();\r\n  const [beta, setBeta] = useState<any>();\r\n  const [s1, setS1] = useState<any>();\r\n  const [s2, setS2] = useState<any>();\r\n  const [VT, setVT] = useState<any>();\r\n  const [VP, setVP] = useState<any>();\r\n  const [check, setCheck] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setVT(\r\n        mod(\r\n          (\r\n            bigintCryptoUtils.modPow(\r\n              BigInt(beta || 99999),\r\n              BigInt(s1 || 99999),\r\n              BigInt(p || 99999)\r\n            ) *\r\n            bigintCryptoUtils.modPow(\r\n              BigInt(s1 || 99999),\r\n              BigInt(s2 || 99999),\r\n              BigInt(p || 99999)\r\n            )\r\n          ).toString() as any,\r\n          p\r\n        ).toString()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [beta, p, s1, s2]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setVP(\r\n        bigintCryptoUtils\r\n          .modPow(\r\n            BigInt(alpha || 99999),\r\n            BigInt(x || 99999),\r\n            BigInt(p || 99999)\r\n          )\r\n          .toString()\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [alpha, p, x]);\r\n\r\n  useEffect(() => {\r\n    setCheck(VT === VP);\r\n  }, [VP, VT]);\r\n\r\n  const reset = () => {\r\n    setX('');\r\n    setP('');\r\n    setAlpha('');\r\n    setBeta('');\r\n    setS1('');\r\n    setS2('');\r\n  };\r\n\r\n  const autoFill = () => {\r\n    setX('2035');\r\n    setP('2357');\r\n    setAlpha('2');\r\n    setBeta('1185');\r\n    setS1('2012');\r\n    setS2('1605');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='mb-4'>\r\n        <b>Kiểm tra chữ ký</b>\r\n      </h3>\r\n      <Space>\r\n        <Button onClick={autoFill}>Example (Auto Fill)</Button>\r\n        <Button onClick={reset}>Clear All</Button>\r\n      </Space>\r\n      <hr />\r\n      <Space className='w-100' direction='vertical' size='large'>\r\n        <Input\r\n          value={x}\r\n          onChange={(e) => setX(e.target.value)}\r\n          addonBefore='x'\r\n          placeholder='Nhập bản rõ x'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={p}\r\n          onChange={(e) => setP(e.target.value)}\r\n          addonBefore='p'\r\n          placeholder='Nhập p'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={alpha}\r\n          onChange={(e) => setAlpha(e.target.value)}\r\n          addonBefore='alpha'\r\n          placeholder='Nhập alpha'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={beta}\r\n          onChange={(e) => setBeta(e.target.value)}\r\n          addonBefore='beta'\r\n          placeholder='Nhập beta'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={s1}\r\n          onChange={(e) => setS1(e.target.value)}\r\n          addonBefore='s1'\r\n          placeholder='Nhập s1'\r\n          type='number'\r\n        />\r\n        <Input\r\n          value={s2}\r\n          onChange={(e) => setS2(e.target.value)}\r\n          addonBefore='s2'\r\n          placeholder='Nhập s2'\r\n          type='number'\r\n        />\r\n      </Space>\r\n      <hr />\r\n      <div>\r\n        <p>\r\n          <b>\r\n            Verify (x, s2, s2) = đúng &lt;=&gt;{' '}\r\n            <code>(beta ^ s1) * (s1 ^ s2) mod p = alpha ^ x mod p</code>\r\n          </b>\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <p>\r\n          <b>(beta ^ s1) * (s1 ^ s2) mod p = </b>({beta} ^ {s1}) * ({s1} ^ {s2})\r\n          mod {p} = {VT}\r\n        </p>\r\n        <p>\r\n          <b>alpha ^ x mod p = </b> {alpha} ^ {x} mod {p} = {VP}\r\n        </p>\r\n      </div>\r\n\r\n      {check ? (\r\n        <h4 className='text-danger'>\r\n          <b>Chữ ký hợp lệ</b>\r\n        </h4>\r\n      ) : (\r\n        <h4 className='text-danger'>\r\n          <b>Chữ ký không hợp lệ</b>\r\n        </h4>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignCheckElgamal;\r\n","import React, { useEffect } from 'react';\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport { Layout, Menu, Breadcrumb, Row, Col } from 'antd';\nimport {\n  UserOutlined,\n  LaptopOutlined,\n  NotificationOutlined,\n} from '@ant-design/icons';\nimport './App.css';\nimport { Footer } from 'antd/lib/layout/layout';\nimport RSA from './rsa/RSA';\nimport Elgamal from './elgamal/Elgamal';\nimport ModuloCaculate from './rsa/Modulo';\nimport { history } from './history';\nimport SignRSA from './rsa/SignRSA';\nimport SignCheckRSA from './rsa/SignRSACheck';\nimport EncryptElgamal from './elgamal/EncryptElgamal';\nimport SignElgama from './elgamal/SignElgamal';\nimport SignCheckElgamal from './elgamal/SignElgamalCheck';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\nconst App = () => {\n  const location = useLocation();\n  useEffect(() => {}, []);\n\n  return (\n    <>\n      <Header className='header text-white justify-content-between'>\n        <Row>\n          <Col span={16}>\n            <>NHẬP MÔN AN TOÀN THÔNG TIN</>\n          </Col>\n          <Col span={8} className='text-center'></Col>\n        </Row>\n      </Header>\n      <Content style={{ padding: '0 50px' }}>\n        <Breadcrumb style={{ margin: '16px 0' }}>\n          <Breadcrumb.Item>UET</Breadcrumb.Item>\n          <Breadcrumb.Item>VNU</Breadcrumb.Item>\n          <Breadcrumb.Item>Nguyễn Văn Huy - 18020651</Breadcrumb.Item>\n        </Breadcrumb>\n        <Layout className='site-layout-background'>\n          <Sider className='site-layout-background' width={200}>\n            <Menu\n              mode='inline'\n              defaultSelectedKeys={[location.pathname.replaceAll('/', '')]}\n              defaultOpenKeys={[\n                location.pathname.replaceAll('/', '').slice(0, -2),\n              ]}\n              style={{ height: '100%' }}\n              onSelect={({ item, key, keyPath, selectedKeys, domEvent }) => {\n                history.push('/' + key);\n              }}\n            >\n              <SubMenu key='rsa' icon={<UserOutlined />} title='Hệ mật RSA'>\n                <Menu.Item key='rsa-1'>Xây dựng hệ mật RSA</Menu.Item>\n                <Menu.Item key='rsa-2'>Tính mũ theo modulo</Menu.Item>\n                <Menu.Item key='rsa-3'>Ký văn bản</Menu.Item>\n                <Menu.Item key='rsa-4'>Kiểm tra chữ ký</Menu.Item>\n              </SubMenu>\n              <SubMenu\n                key='elgamal'\n                icon={<LaptopOutlined />}\n                title='Hệ mật ElGamal'\n              >\n                <Menu.Item key='elgamal-1'>Xây dựng hệ mật Elgamal</Menu.Item>\n                <Menu.Item key='elgamal-2'>Mã hóa Elgamal</Menu.Item>\n                <Menu.Item key='elgamal-3'>Ký văn bản</Menu.Item>\n                <Menu.Item key='elgamal-4'>Kiểm tra chữ ký</Menu.Item>\n              </SubMenu>\n              <SubMenu\n                key='elliptic'\n                icon={<NotificationOutlined />}\n                title='Hệ mật trên đường cong Elliptic'\n              >\n                <Menu.Item key='elliptic-1'>Elliptic</Menu.Item>\n              </SubMenu>\n            </Menu>\n          </Sider>\n          <Content style={{ padding: '30px', marginBottom: 30 }}>\n            <Switch>\n              <Route exact path='/rsa-1' component={RSA} />\n              <Route exact path='/rsa-2' component={ModuloCaculate} />\n              <Route exact path='/rsa-3' component={SignRSA} />\n              <Route exact path='/rsa-4' component={SignCheckRSA} />\n              <Route exact path='/elgamal-1' component={Elgamal} />\n              <Route exact path='/elgamal-2' component={EncryptElgamal} />\n              <Route exact path='/elgamal-3' component={SignElgama} />\n              <Route exact path='/elgamal-4' component={SignCheckElgamal} />\n              <Route exact path='/elliptic-1' component={Elgamal} />\n              <Route path='*' component={DefaultRedirect} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Content>\n      <Footer style={{ textAlign: 'center', marginTop: 50 }}>\n        [18020651] - Nguyễn Văn Huy\n      </Footer>\n    </>\n  );\n};\n\nexport default App;\n\nconst DefaultRedirect: React.FC = () => {\n  useEffect(() => {\n    window.location.href = '/rsa-1';\n  }, []);\n  return <></>;\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { history } from './history';\nimport { Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}